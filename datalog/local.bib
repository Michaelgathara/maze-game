@article{tarjan-scc,
  title={Depth-first search and linear graph algorithms},
  author={Tarjan, Robert},
  journal={SIAM journal on computing},
  volume={1},
  number={2},
  pages={146--160},
  year={1972},
  publisher={SIAM}
}

@misc{forum1994mpi,
	title={MPI: A message-passing interface standard},
	author={Forum, Message P},
	year={1994},
	publisher={University of Tennessee}
}

@article{zambre2021logically,
	title={Logically Parallel Communication for Fast MPI+ Threads Applications},
	author={Zambre, Rohit and Sahasrabudhe, Damodar and Zhou, Hui and Berzins, Martin and Chandramowlishwaran, Aparna and Balaji, Pavan},
	journal={IEEE Transactions on Parallel and Distributed Systems},
	year={2021},
	publisher={IEEE}
}
                 

@inproceedings{azure-august2019,
  title={Introducing the new HBv2 Azure Virtual Machines for high-performance computing},
  author={Evan Burness},
  year={2019},
  note="{\footnotesize\url{https://azure.microsoft.com/en-us/blog/introducing-the-new-hbv2-azure-virtual-machines-for-high-performance-computing/}}; accessed August 11, 2019."
}


@inproceedings{dpa-workshop,
  title={DPA 2019 Workshop on Declarative Program Analysis},
  author={Max Schaefer},
  year={2019},
  note="{\footnotesize\url{https://pldi19.sigplan.org/home/dpa-2019}}; accessed September 24, 2019."
}

@PhDThesis{VanHorn:diss,
  author={David Van Horn},
  title={The Complexity of Flow Analysis in Higher-Order Languages},
  school={Brandeis University},
  year={2009}
}

@PhDThesis{shivers:1991:diss,
  author = {Olin Shivers},
  title = {Control-Flow Analysis of Higher-Order Languages},
  school = {Carnegie-Mellon University},
  year = {1991},
  month = {May},
  address = {Pittsburgh, PA},
}
                  
@INPROCEEDINGS{Abdelhamid:16,
  author={E. {Abdelhamid} and I. {Abdelaziz} and P. {Kalnis} and Z. {Khayyat} and F. {Jamour}},
  booktitle={SC '16: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis}, 
  title={ScaleMine: Scalable Parallel Frequent Subgraph Mining in a Single Large Graph}, 
  year={2016},
  volume={},
  number={},
  pages={716-727}
}
                  
@INPROCEEDINGS{Babu:2016,
  author={N. {Babu} and A. {John}},
  booktitle={2016 International Conference on Emerging Technological Trends (ICETT)}, 
  title={A distributed approach to weighted frequent Subgraph mining}, 
  year={2016},
  volume={},
  number={},
  pages={1-7}
}
                  
@inproceedings{Donald:2013,
author = {Nguyen, Donald and Lenharth, Andrew and Pingali, Keshav},
title = {A Lightweight Infrastructure for Graph Analytics},
year = {2013},
isbn = {9781450323888},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2517349.2522739},
doi = {10.1145/2517349.2522739},
booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
pages = {456–471},
numpages = {16},
location = {Farminton, Pennsylvania},
series = {SOSP '13}
}

@inproceedings{germane2020liberate,
  title={Liberate Abstract Garbage Collection from the Stack by Decomposing the Heap},
  author={Germane, Kimball and Adams, Michael D},
  booktitle={European Symposium on Programming},
  pages={197--223},
  year={2020},
  organization={Springer, Cham}
}

@inproceedings{might2010resolving,
  title={Resolving and exploiting the k-CFA paradox: illuminating functional vs. object-oriented program analysis},
  author={Might, Matthew and Smaragdakis, Yannis and Van Horn, David},
  booktitle={Proceedings of the 31st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={305--315},
  year={2010}
}

@article{van2008deciding,
  title={Deciding k CFA is complete for EXPTIME},
  author={Van Horn, David and Mairson, Harry G},
  journal={ACM Sigplan Notices},
  volume={43},
  number={9},
  pages={275--282},
  year={2008},
  publisher={ACM New York, NY, USA}
}

@article{krivine:2007:cbn,
  title={A call-by-name lambda-calculus machine},
  author={Krivine, Jean-Louis},
  journal={Higher-order and symbolic computation},
  volume={20},
  number={3},
  pages={199--207},
  year={2007},
  publisher={Springer}
}

@inproceedings{cousot1979systematic,
  title={Systematic design of program analysis frameworks},
  author={Cousot, Patrick and Cousot, Radhia},
  booktitle={Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
  pages={269--282},
  year={1979}
}

@article{cousot1996abstract,
  title={Abstract interpretation},
  author={Cousot, Patrick},
  journal={ACM Computing Surveys (CSUR)},
  volume={28},
  number={2},
  pages={324--328},
  year={1996},
  publisher={ACM New York, NY, USA}
}

@inproceedings{cousot77unifiedmodel,
 author = {Cousot, Patrick and Cousot, Radhia},
 title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
 booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '77},
 year = {1977},
 location = {Los Angeles, California},
 pages = {238--252},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/512950.512973},
 doi = {10.1145/512950.512973},
 acmid = {512973},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{midtgaard2012control,
  title={Control-flow analysis of functional programs},
  author={Midtgaard, Jan},
  journal={ACM computing surveys (CSUR)},
  volume={44},
  number={3},
  pages={1--33},
  year={2012},
  publisher={ACM New York, NY, USA}
}

@inproceedings{gilray2016poly,
 author = {Gilray, Thomas and Adams, Michael D. and Might, Matthew},
 title = {Allocation Characterizes Polyvariance: A Unified Methodology for Polyvariant Control-flow Analysis},
 booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '16},
 year = {2016},
 isbn = {978-1-4503-4219-3},
 location = {Nara, Japan},
 pages = {407--420},
 url = {http://doi.acm.org/10.1145/2951913.2951936},
 doi = {10.1145/2951913.2951936},
 acmid = {2951936},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Abstract allocation, Abstract interpretation, Context sensitivity, Control-flow analysis, Polyvariance, Static analysis}
}

@inproceedings{gilray2016p4f,
 author = {Gilray, Thomas and Lyde, Steven and Adams, Michael D. and Might, Matthew and Van Horn, David},
 title = {Pushdown Control-flow Analysis for Free},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 year = {2016},
 isbn = {978-1-4503-3549-2},
 location = {St. Petersburg, FL, USA},
 pages = {691--704},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2837614.2837631},
 doi = {10.1145/2837614.2837631},
 acmid = {2837631},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Abstract interpretation, Control-flow analysis, Pushdown analysis, Static analysis, Store-allocated continuations},
}

@inproceedings{might2010abstract,
  title={Abstract interpreters for free},
  author={Might, Matthew},
  booktitle={International Static Analysis Symposium},
  series = {SAS '10},
  pages={407--421},
  year={2010},
  organization={Springer}
}

@inproceedings{VanHorn:2010,
 author = {Van Horn, David and Might, Matthew},
 title = {Abstracting Abstract Machines},
 booktitle = {Proceedings of the 15th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '10},
 year = {2010},
 isbn = {978-1-60558-794-3},
 location = {Baltimore, Maryland, USA},
 pages = {51--62},
 url = {http://doi.acm.org/10.1145/1863543.1863553},
 doi = {10.1145/1863543.1863553},
 acmid = {1863553},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpretation, abstract machines},
}
                  
@inproceedings{Mawhirter:2019,
author = {Mawhirter, Daniel and Wu, Bo},
title = {AutoMine: Harmonizing High-Level Abstraction and High Performance for Graph Mining},
year = {2019},
isbn = {9781450368735},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341301.3359633},
doi = {10.1145/3341301.3359633},
booktitle = {Proceedings of the 27th ACM Symposium on Operating Systems Principles},
pages = {509–523},
numpages = {15},
keywords = {compiler, graph mining, graph pattern matching},
location = {Huntsville, Ontario, Canada},
series = {SOSP '19}
}
                  
@INPROCEEDINGS{Zhao:2020,
  author={C. {Zhao} and Z. {Zhang} and P. {Xu} and T. {Zheng} and J. {Guo}},
  booktitle={2020 IEEE 36th International Conference on Data Engineering (ICDE)}, 
  title={Kaleido: An Efficient Out-of-core Graph Mining System on A Single Machine}, 
  year={2020},
  volume={},
  number={},
  pages={673-684}
}
                  

@inproceedings{wang2018rstream,
  title={RStream: marrying relational algebra with streaming for efficient graph mining on a single machine},
  author={Wang, Kai and Zuo, Zhiqiang and Thorpe, John and Nguyen, Tien Quang and Xu, Guoqing Harry},
  booktitle={13th $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation ($\{$OSDI$\}$ 18)},
  pages={763--782},
  year={2018}
}

@inproceedings{blackburn2006dacapo,
  title={The DaCapo benchmarks: Java benchmarking development and analysis},
  author={Blackburn, Stephen M and Garner, Robin and Hoffmann, Chris and Khang, Asjad M and McKinley, Kathryn S and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z and others},
  booktitle={ACM Sigplan Notices},
  volume={41},
  number={10},
  pages={169--190},
  year={2006},
  organization={ACM}
}

@inproceedings{lakshminarasimhan2011isabela,
  title={ISABELA-QA: query-driven analytics with ISABELA-compressed extreme-scale scientific data},
  author={Lakshminarasimhan, Sriram and Jenkins, John and Arkatkar, Isha and Gong, Zhenhuan and Kolla, Hemanth and Ku, Seung-Hoe and Ethier, Stephane and Chen, Jackie and Chang, Choong-Seock and Klasky, Scott and others},
  booktitle={Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis},
  pages={31},
  year={2011},
  organization={ACM}
}

@article{bagnara2008parma,
  title={The Parma Polyhedra Library: Toward a complete set of numerical abstractions for the analysis and verification of hardware and software systems},
  author={Bagnara, Roberto and Hill, Patricia M and Zaffanella, Enea},
  journal={Science of Computer Programming},
  volume={72},
  number={1-2},
  pages={3--21},
  year={2008},
  publisher={Elsevier}
}

@article{nguyen2017soft,
  title={Soft contract verification for higher-order stateful programs},
  author={Nguyễn, Ph{\'u}c C and Gilray, Thomas and Tobin-Hochstadt, Sam and Van Horn, David},
  journal={Proceedings of the ACM on Programming Languages},
  volume={2},
  number={POPL},
  pages={51},
  year={2017},
  publisher={ACM}
}

@inproceedings{shivers:1988:cfascheme,
  author = {Olin Shivers},
  title = {Control Flow Analysis in Scheme},
  booktitle = {Proceedings of the Conference on Programming Language Design and Implementation},
  year = {1988},
  location = {Atlanta, GA},
  pages = {164-174},
  publisher = {ACM},
  address = {New York, NY},
}

@inproceedings{antoniadis2017porting,
  title={Porting {DOOP} to souffl{\'e}: a tale of inter-engine portability for datalog-based analyses},
  author={Antoniadis, Tony and Triantafyllou, Konstantinos and Smaragdakis, Yannis},
  booktitle={Proceedings of the 6th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis},
  pages={25--30},
  year={2017},
  organization={ACM}
}

@inproceedings{malewicz2010pregel,
  title={Pregel: a system for large-scale graph processing},
  author={Malewicz, Grzegorz and Austern, Matthew H and Bik, Aart JC and Dehnert, James C and Horn, Ilan and Leiser, Naty and Czajkowski, Grzegorz},
  booktitle={Proceedings of the 2010 ACM SIGMOD International Conference on Management of data},
  pages={135--146},
  year={2010},
  organization={ACM}
}

@techreport{page1999pagerank,
  title={The PageRank citation ranking: Bringing order to the web.},
  author={Page, Lawrence and Brin, Sergey and Motwani, Rajeev and Winograd, Terry},
  year={1999},
  institution={Stanford InfoLab}
}

@inproceedings{Bravenboer:2009,
 author = {Bravenboer, Martin and Smaragdakis, Yannis},
 title = {Strictly Declarative Specification of Sophisticated Points-to Analyses},
 booktitle = {Proceedings of the 24th ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '09},
 year = {2009},
 isbn = {978-1-60558-766-0},
 location = {Orlando, Florida, USA},
 pages = {243--262},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/1640089.1640108},
 doi = {10.1145/1640089.1640108},
 acmid = {1640108},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DOOP, bdds, datalog, declarative, points-to analysis},
}

@inproceedings{kumar:hipc:2019,
  title={Distributed Relational Algebra at Scale},
  author={Sidharth Kumar and Thomas Gilray},
  booktitle={International Conference on High Performance Computing, Data, and Analytics (HiPC)},
  year={2019},
  publisher={IEEE}}

@article{liu2002logical,
  title={A logical foundation for deductive object-oriented databases},
  author={Liu, Mengchi and Dobbie, Gillian and Ling, Tok Wang},
  journal={ACM Transactions on Database Systems (TODS)},
  volume={27},
  number={1},
  pages={117--151},
  year={2002},
  publisher={ACM}
}

@inproceedings{torlak2007kodkod,
  title={Kodkod: A relational model finder},
  author={Torlak, Emina and Jackson, Daniel},
  booktitle={International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={632--647},
  year={2007},
  organization={Springer}
}

@misc{van2013machine,
  title={Machine learning using relational databases},
  author={Van Gael, Jurgen Anne Francios Marie and Herbrich, Ralf and Graepel, Thore},
  year={2013},
  month=jan # "~29",
  publisher={Google Patents},
  note={US Patent 8,364,612}
}

@inproceedings{wang2018rstream,
  title={RStream: marrying relational algebra with streaming for efficient graph mining on a single machine},
  author={Wang, Kai and Zuo, Zhiqiang and Thorpe, John and Nguyen, Tien Quang and Xu, Guoqing Harry},
  booktitle={13th $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation ($\{$OSDI$\}$ 18)},
  pages={763--782},
  year={2018}
}

@article{kim2009sort,
  title={Sort vs. Hash revisited: fast join implementation on modern multi-core CPUs},
  author={Kim, Changkyu and Kaldewey, Tim and Lee, Victor W and Sedlar, Eric and Nguyen, Anthony D and Satish, Nadathur and Chhugani, Jatin and Di Blas, Andrea and Dubey, Pradeep},
  journal={Proceedings of the VLDB Endowment},
  volume={2},
  number={2},
  pages={1378--1389},
  year={2009},
  publisher={VLDB Endowment}
}

@inproceedings{junger2018warpdrive,
  title={WarpDrive: Massively parallel hashing on multi-GPU nodes},
  author={J{\"u}nger, Daniel and Hundt, Christian and Schmidt, Bertil},
  booktitle={2018 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
  pages={441--450},
  year={2018},
  organization={IEEE}
}

@inproceedings{pan2018optimizing,
  title={Optimizing high performance distributed memory parallel hash tables for DNA k-mer counting},
  author={Pan, Tony C and Misra, Sanchit and Aluru, Srinivas},
  booktitle={SC18: International Conference for High Performance Computing, Networking, Storage and Analysis},
  pages={135--147},
  year={2018},
  organization={IEEE}
}

@article{maier2016concurrent,
  title={Concurrent hash tables: Fast and general?(!)},
  author={Maier, Tobias and Sanders, Peter and Dementiev, Roman},
  journal={arXiv preprint arXiv:1601.04017},
  year={2016}
}

@inproceedings{leskovec2005realistic,
  title={Realistic, mathematically tractable graph generation and evolution, using kronecker multiplication},
  author={Leskovec, Jurij and Chakrabarti, Deepayan and Kleinberg, Jon and Faloutsos, Christos},
  booktitle={European conference on principles of data mining and knowledge discovery},
  pages={133--145},
  year={2005},
  organization={Springer}
}

@article{Balkesen:2013,
author = {Balkesen, Cagri and Alonso, Gustavo and Teubner, Jens and \"{O}zsu, M. Tamer},
title = {Multi-Core, Main-Memory Joins: Sort vs. Hash Revisited},
year = {2013},
issue_date = {September 2013},
publisher = {VLDB Endowment},
volume = {7},
number = {1},
issn = {2150-8097},
url = {https://doi.org/10.14778/2732219.2732227},
doi = {10.14778/2732219.2732227},
journal = {Proc. VLDB Endow.},
month = sep,
pages = {85–96},
numpages = {12}
}

@misc{parallelcluster,
    title = {{AWS ParallelCluster}},
    howpublished = {https://aws.amazon.com/hpc/parallelcluster/},
    note = {Accessed: 2022-06-01}
}
                  
@misc{cpmd-web,
    title = {{CPMD} Home Page},
    howpublished = {http://www.cpmd.org/}
}

@book{abiteboul1995foundations,
  title={Foundations of databases: the logical level},
  author={Abiteboul, Serge and Hull, Richard and Vianu, Victor},
  year={1995},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}

@misc{theta-web,
	title = {{Theta} ALCF Home Page},
	howpublished = {https://www.alcf.anl.gov/theta}
}

@misc{coffmann_thetaio_2018,
	year={2018},
	title={{Parallel} {I}/{O} on {Theta} with {Best} {Practices}},
	author={Coffman, Paul and Tessier, Francois and Malakar, Preeti and Brown, George},
	howpublished={Talk at ALCF Simulation, Data, and Learning Workshop}
}

@article{10.1145/2027066.2027068,
	author = {Carns, Philip and Harms, Kevin and Allcock, William and Bacon, Charles and Lang, Samuel and Latham, Robert and Ross, Robert},
	title = {Understanding and Improving Computational Science Storage Access through Continuous Characterization},
	year = {2011},
	issue_date = {October 2011},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {7},
	number = {3},
	issn = {1553-3077},
	url = {https://doi.org/10.1145/2027066.2027068},
	doi = {10.1145/2027066.2027068},
	abstract = {Computational science applications are driving a demand for increasingly powerful storage systems. While many techniques are available for capturing the I/O behavior of individual application trial runs and specific components of the storage system, continuous characterization of a production system remains a daunting challenge for systems with hundreds of thousands of compute cores and multiple petabytes of storage. As a result, these storage systems are often designed without a clear understanding of the diverse computational science workloads they will support.In this study, we outline a methodology for scalable, continuous, systemwide I/O characterization that combines storage device instrumentation, static file system analysis, and a new mechanism for capturing detailed application-level behavior. This methodology allows us to identify both system-wide trends and application-specific I/O strategies. We demonstrate the effectiveness of our methodology by performing a multilevel, two-month study of Intrepid, a 557-teraflop IBM Blue Gene/P system. During that time, we captured application-level I/O characterizations from 6,481 unique jobs spanning 38 science and engineering projects. We used the results of our study to tune example applications, highlight trends that impact the design of future storage systems, and identify opportunities for improvement in I/O characterization methodology.},
	journal = {ACM Trans. Storage},
	month = oct,
	articleno = {8},
	numpages = {26},
	keywords = {I/O characterization, parallel file systems}
}

@InProceedings{Kumar:2020,
	author="Kumar, Sidharth
	and Gilray, Thomas",
	editor="Sadayappan, Ponnuswamy
	and Chamberlain, Bradford L.
	and Juckeland, Guido
	and Ltaief, Hatem",
	title="Load-Balancing Parallel Relational Algebra",
	booktitle="High Performance Computing",
	year="2020",
	publisher="Springer International Publishing",
	address="Cham",
	pages="288--308",
	abstract="Relational algebra (RA) comprises a basis of important operations, sufficient to power state-of-the-art reasoning engines for Datalog and related logic-programming languages. Parallel RA implementations can thus play a significant role in extracting parallelism inherent in a wide variety of analytic problems. In general, bottom-up logical inference can be implemented as fixed-point iteration over RA kernels; relations dynamically accumulate new tuples of information according to a set of rules until no new tuples can be discovered from previously inferred tuples and relevant rules (RA kernels). While this strategy has been quite successful in single-node contexts, it poses unique challenges when distributed over many-node, networked clusters---especially regarding how the work-load is balanced across available compute resources.",
	isbn="978-3-030-50743-5"
}

@misc{theta-lustre-web,
	title = {{Theta-file-system}},
	howpublished = {https://www.alcf.anl.gov/support-center/theta/theta-file-systems}
}




@misc{google-web,
	howpublished = {https://snap.stanford.edu/data/web-Google.html}
}

@misc{graph-web,
	howpublished = {https://www.cise.ufl.edu/research/sparse/matrices/CPM/cz40948.html}
}

@article{Davis:2011:UFS:2049662.2049663,
	author = {Davis, Timothy A. and Hu, Yifan},
	title = {The University of Florida Sparse Matrix Collection},
	journal = {ACM Trans. Math. Softw.},
	issue_date = {November 2011},
	volume = {38},
	number = {1},
	month = dec,
	year = {2011},
	issn = {0098-3500},
	pages = {1:1--1:25},
	articleno = {1},
	numpages = {25},
	xurl = {http://doi.acm.org/10.1145/2049662.2049663},
	xdoi = {10.1145/2049662.2049663},
	acmid = {2049663},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Graph drawing, multilevel algorithms, performance evaluation, sparse matrices},
} 
@INPROCEEDINGS{1592872, 
	author={J. C. {Phillips} and and S. {Kumar} and L. V. {Kale}}, 
	booktitle={SC '02: Proceedings of the 2002 ACM/IEEE Conference on Supercomputing}, 
	title={NAMD: Biomolecular Simulation on Thousands of Processors}, 
	year={2002}, 
	volume={}, 
	number={}, 
	pages={36-36}, 
	keywords={Object oriented modeling;Computational modeling;Electrostatics;Force measurement;Scalability;Lipidomics;Equations;Solvents;Computer simulation;Production systems}, 
	xdoi={10.1109/SC.2002.10019}, 
	ISSN={1063-9535}, 
	month={Nov},}


@INPROCEEDINGS{4536141, 
	author={R. {Kumar} and A. {Mamidala} and D. K. {Panda}}, 
	booktitle={2008 IEEE International Symposium on Parallel and Distributed Processing}, 
	title={Scaling alltoall collective on multi-core systems}, 
	year={2008}, 
	volume={}, 
	number={}, 
	pages={1-8}, 
	keywords={computer architecture;message passing;parallel processing;shared memory systems;alltoall collective scaling;multicore systems;MPI_Alltoall;communication intense collective operation;parallel applications;supercomputing;application scaling;InfiniBand architecture;network protocol stack;network utilization;offload interface aggregation;shared memory aggregation technique;Multicore processing;Delay;Network interfaces;Protocols;Sun;Computer science;Application software;Context;Surges;US Department of Energy}, 
	xdoi={10.1109/IPDPS.2008.4536141}, 
	ISSN={1530-2075}, 
	month={April},}

@ARTICLE{642949, 
	author={J. {Bruck} and and S. {Kipnis} and E. {Upfal} and D. {Weathersby}}, 
	journal={IEEE Transactions on Parallel and Distributed Systems}, 
	title={Efficient algorithms for all-to-all communications in multiport message-passing systems}, 
	year={1997}, 
	volume={8}, 
	number={11}, 
	pages={1143-1156}, 
	keywords={message passing;parallel algorithms;communication complexity;all-to-all communications;multiport;message-passing systems;complexity measures;communication bandwidth;communication start-up;point-to-point communication;sender-receiver pair;index;concatenation;Broadcasting;Application software;Time measurement;Algorithm design and analysis;Concurrent computing;Particle measurements;Topology;Bandwidth;Scattering;Parallel programming}, 
	doi={10.1109/71.642949}, 
	ISSN={1045-9219}, 
	month={Nov},}

@article{Thakur:2005:OCC:2747766.2747771,
	author = {Thakur, Rajeev and Rabenseifner, Rolf and Gropp, William},
	title = {Optimization of Collective Communication Operations in MPICH},
	journal = {Int. J. High Perform. Comput. Appl.},
	issue_date = {February  2005},
	volume = {19},
	number = {1},
	month = feb,
	year = {2005},
	issn = {1094-3420},
	pages = {49--66},
	numpages = {18},
	xurl = {http://dx.doi.org/10.1177/1094342005051521},
	xdoi = {10.1177/1094342005051521},
	acmid = {2747771},
	publisher = {Sage Publications, Inc.},
	address = {Thousand Oaks, CA, USA},
	keywords = {Collective communication, MPI, message passing, reduction},
}

@inproceedings{Wu:2014:RFE:2581122.2544166,
	author = {Wu, Haicheng and Diamos, Gregory and Sheard, Tim and Aref, Molham and Baxter, Sean and Garland, Michael and Yalamanchili, Sudhakar},
	title = {Red Fox: An Execution Environment for Relational Query Processing on GPUs},
	booktitle = {Proceedings of Annual IEEE/ACM International Symposium on Code Generation and Optimization},
	series = {CGO '14},
	year = {2014},
	isbn = {978-1-4503-2670-4},
	location = {Orlando, FL, USA},
	pages = {44:44--44:54},
	articleno = {44},
	numpages = {11},
	xurl = {http://doi.acm.org/10.1145/2581122.2544166},
	xdoi = {10.1145/2581122.2544166},
	acmid = {2544166},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {GPU, Relational Query Processing},
} 
@article{Martinez-Angeles:2016:RLG:2932241.2932244,
	author = {Mart\'{\i}nez-Angeles, Carlos Alberto and Wu, Haicheng and Dutra, In\^{e}s and Costa, V\'{\i}tor Santos and Buenabad-Ch\'{a}vez, Jorge},
	title = {Relational Learning with GPUs: Accelerating Rule Coverage},
	journal = {Int. J. Parallel Program.},
	issue_date = {June      2016},
	volume = {44},
	number = {3},
	month = jun,
	year = {2016},
	issn = {0885-7458},
	pages = {663--685},
	numpages = {23},
	xurl = {http://dx.doi.org/10.1007/s10766-015-0364-7},
	xdoi = {10.1007/s10766-015-0364-7},
	acmid = {2932244},
	publisher = {Kluwer Academic Publishers},
	address = {Norwell, MA, USA},
	keywords = {Datalog, GPUs, Inductive logic, Logic programming, Parallel computing, Relational databases, Relational learning},
} 
@inproceedings{Zinn:2016:GJA:2884045.2884054,
	author = {Zinn, Daniel and Wu, Haicheng and Wang, Jin and Aref, Molham and Yalamanchili, Sudhakar},
	title = {General-purpose Join Algorithms for Large Graph Triangle Listing on Heterogeneous Systems},
	booktitle = {Proceedings of the 9th Annual Workshop on General Purpose Processing Using Graphics Processing Unit},
	series = {GPGPU '16},
	year = {2016},
	isbn = {978-1-4503-4195-0},
	location = {Barcelona, Spain},
	pages = {12--21},
	numpages = {10},
	xurl = {http://doi.acm.org/10.1145/2884045.2884054},
	xdoi = {10.1145/2884045.2884054},
	acmid = {2884054},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {GPGPU, data partitioning, triangle listing},
} 
@article{Barthels:2017,
	author = {Barthels, Claude and M\"{u}ller, Ingo and Schneider, Timo and Alonso, Gustavo and Hoefler, Torsten},
	title = {Distributed Join Algorithms on Thousands of Cores},
	journal = {Proc. VLDB Endow.},
	issue_date = {January 2017},
	volume = {10},
	number = {5},
	month = jan,
	year = {2017},
	issn = {2150-8097},
	pages = {517--528},
	numpages = {12},
	xurl = {https://doi.org/10.14778/3055540.3055545},
	xdoi = {10.14778/3055540.3055545},
	acmid = {3055545},
	publisher = {VLDB Endowment},
} 
@article{Muhammad:2022,
author = {Imran, Muhammad and G\'{e}vay, G\'{a}bor E. and Quian\'{e}-Ruiz, Jorge-Arnulfo and Markl, Volker},
title = {Fast Datalog Evaluation for Batch and Stream Graph Processing},
year = {2022},
issue_date = {Mar 2022},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {25},
number = {2},
issn = {1386-145X},
url = {https://doi.org/10.1007/s11280-021-00960-w},
doi = {10.1007/s11280-021-00960-w},
abstract = {Implementing complex algorithms for big data, artificial intelligence, and graph processing requires enormous effort. Succinct, declarative programs to solve complex problems that can be efficiently executed for batching and streaming data are in demand. This paper presents Nexus, a distributed Datalog evaluation system. It evaluates Datalog programs using the semi-naive algorithm for batch and streaming data using incremental and asynchronous iteration. Furthermore, we evaluate Datalog programs with aggregates to determine the advantages of implementing the semi-naive algorithm using incremental iteration on its performance. Our experimental results show that Nexus significantly outperforms acyclic dataflow-based systems.},
journal = {World Wide Web},
month = {mar},
pages = {971–1003},
numpages = {33},
keywords = {Recursive queries, Batch and stream processing, Cyclic dataflows, Provenance, Datalog, Graph processing}
}
@article{Anderson:2017,
author = {Anderson, Michael and Smith, Shaden and Sundaram, Narayanan and Capot\u{a}, Mihai and Zhao, Zheguang and Dulloor, Subramanya and Satish, Nadathur and Willke, Theodore L.},
title = {Bridging the Gap between HPC and Big Data Frameworks},
year = {2017},
issue_date = {April 2017},
publisher = {VLDB Endowment},
volume = {10},
number = {8},
issn = {2150-8097},
url = {https://doi.org/10.14778/3090163.3090168},
doi = {10.14778/3090163.3090168},
abstract = {Apache Spark is a popular framework for data analytics with attractive features such as fault tolerance and interoperability with the Hadoop ecosystem. Unfortunately, many analytics operations in Spark are an order of magnitude or more slower compared to native implementations written with high performance computing tools such as MPI. There is a need to bridge the performance gap while retaining the benefits of the Spark ecosystem such as availability, productivity, and fault tolerance. In this paper, we propose a system for integrating MPI with Spark and analyze the costs and benefits of doing so for four distributed graph and machine learning applications. We show that offloading computation to an MPI environment from within Spark provides 3.1−17.7\texttimes{} speedups on the four sparse applications, including all of the overheads. This opens up an avenue to reuse existing MPI libraries in Spark with little effort.},
journal = {Proc. VLDB Endow.},
month = {apr},
pages = {901–912},
numpages = {12}
}

@article{Kumar:2017,
article_type = {journal},
title = {Performance Evaluation of Apache Spark Vs MPI: A Practical Case Study on Twitter Sentiment Analysis},
author = {Kumar, Deepa S and Rahman, M Abdul},
volume = {13},
number = {12},
year = {2017},
month = {Dec},
pages = {781-794},
doi = {10.3844/jcssp.2017.781.794},
url = {https://thescipub.com/abstract/jcssp.2017.781.794},
abstract = {The advent of various processing frameworks which happens under big data technologies is due to tremendous dataset size and its complexity. The speed of execution was much higher with High Performance computing frameworks rather than big data processing frameworks. As majority of the jobs under big data are mostly data intensive rather than computation intensive, the High Performance Computing paradigms were not been used in big data processing. This paper reviews two distributed and parallel computing frameworks: Apache Spark and MPI. Sentiment analysis on twitter data is chosen as a test case application for benchmarking and implemented on Scala programming for spark processing and in C++ for MPI. Experiments were conducted on Google cloud virtual machines for three data set sizes, 100 GB, 500 GB and 1 TB to compare the execution times. Results shown that MPI outperforms Apache Spark in parallel and distributed cluster computing environments and hence the higher performance of MPI can be exploited in big data applications for improving speedups.},
journal = {Journal of Computer Science},
publisher = {Science Publications}
}                  
@article{SparkBadMPIGood,
title = {Big Data Analytics in the Cloud: Spark on Hadoop vs MPI/OpenMP on Beowulf},
journal = {Procedia Computer Science},
volume = {53},
pages = {121-130},
year = {2015},
note = {INNS Conference on Big Data 2015 Program San Francisco, CA, USA 8-10 August 2015},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2015.07.286},
url = {https://www.sciencedirect.com/science/article/pii/S1877050915017895},
author = {Jorge L. Reyes-Ortiz and Luca Oneto and Davide Anguita},
keywords = {Big Data, Supervised Learning, Spark, Hadoop, MPI, OpenMP, Beowulf, Cloud, Parallel Computing},
abstract = {One of the biggest challenges of the current big data landscape is our inability to pro- cess vast amounts of information in a reasonable time. In this work, we explore and com- pare two distributed computing frameworks implemented on commodity cluster architectures: MPI/OpenMP on Beowulf that is high-performance oriented and exploits multi-machine/multi- core infrastructures, and Apache Spark on Hadoop which targets iterative algorithms through in-memory computing. We use the Google Cloud Platform service to create virtual machine clusters, run the frameworks, and evaluate two supervised machine learning algorithms: KNN and Pegasos SVM. Results obtained from experiments with a particle physics data set show MPI/OpenMP outperforms Spark by more than one order of magnitude in terms of processing speed and provides more consistent performance. However, Spark shows better data manage- ment infrastructure and the possibility of dealing with other aspects such as node failure and data replication.}
}                  

@inproceedings{Gu:2019,
author = {Gu, Jiaqi and Watanabe, Yugo H. and Mazza, William A. and Shkapsky, Alexander and Yang, Mohan and Ding, Ling and Zaniolo, Carlo},
title = {RaSQL: Greater Power and Performance for Big Data Analytics with Recursive-Aggregate-SQL on Spark},
year = {2019},
isbn = {9781450356435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3299869.3324959},
doi = {10.1145/3299869.3324959},
abstract = {Thanks to a simple SQL extension, Recursive-aggregate-SQL (RaSQL) can express very powerful queries and declarative algorithms, such as classical graph algorithms and data mining algorithms. A novel compiler implementation allows RaSQL to map declarative queries into one basic fixpoint operator supporting aggregates in recursive queries. A fully optimized implementation of this fixpoint operator leads to superior performance, scalability and portability. Thus, our RaSQL system, which extends Spark SQL with the before-mentioned new constructs and implementation techniques, matches and often surpasses the performance of other systems, including Apache Giraph, GraphX and Myria.},
booktitle = {Proceedings of the 2019 International Conference on Management of Data},
pages = {467–484},
numpages = {18},
keywords = {recursive query, declarative algorithms in sql, distributed computation, aggregates in recursion},
location = {Amsterdam, Netherlands},
series = {SIGMOD '19}
}
                  

@inproceedings{Halperin:2014,
author = {Halperin, Daniel and Teixeira de Almeida, Victor and Choo, Lee Lee and Chu, Shumo and Koutris, Paraschos and Moritz, Dominik and Ortiz, Jennifer and Ruamviboonsuk, Vaspol and Wang, Jingjing and Whitaker, Andrew and Xu, Shengliang and Balazinska, Magdalena and Howe, Bill and Suciu, Dan},
title = {Demonstration of the Myria Big Data Management Service},
year = {2014},
isbn = {9781450323765},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2588555.2594530},
doi = {10.1145/2588555.2594530},
abstract = {In this demonstration, we will showcase Myria, our novel cloud service for big data management and analytics designed to improve productivity. Myria's goal is for users to simply upload their data and for the system to help them be self-sufficient data science experts on their data -- self-serve analytics. Using a web browser, Myria users can upload data, author efficient queries to process and explore the data, and debug correctness and performance issues. Myria queries are executed on a scalable, parallel cluster that uses both state-of-the-art and novel methods for distributed query processing. Our interactive demonstration will guide visitors through an exploration of several key Myria features by interfacing with the live system to analyze big datasets over the web.},
booktitle = {Proceedings of the 2014 ACM SIGMOD International Conference on Management of Data},
pages = {881–884},
numpages = {4},
keywords = {data management service, big data management, Myria},
location = {Snowbird, Utah, USA},
series = {SIGMOD '14}
}
                  
@article{Seo:2013,
author = {Seo, Jiwon and Park, Jongsoo and Shin, Jaeho and Lam, Monica S.},
title = {Distributed Socialite: A Datalog-Based Language for Large-Scale Graph Analysis},
year = {2013},
issue_date = {September 2013},
publisher = {VLDB Endowment},
volume = {6},
number = {14},
issn = {2150-8097},
url = {https://doi.org/10.14778/2556549.2556572},
doi = {10.14778/2556549.2556572},
abstract = {Large-scale graph analysis is becoming important with the rise of world-wide social network services. Recently in SociaLite, we proposed extensions to Datalog to efficiently and succinctly implement graph analysis programs on sequential machines. This paper describes novel extensions and optimizations of SociaLite for parallel and distributed executions to support large-scale graph analysis.With distributed SociaLite, programmers simply annotate how data are to be distributed, then the necessary communication is automatically inferred to generate parallel code for cluster of multi-core machines. It optimizes the evaluation of recursive monotone aggregate functions using a delta stepping technique. In addition, approximate computation is supported in SociaLite, allowing programmers to trade off accuracy for less time and space.We evaluated SociaLite with six core graph algorithms used in many social network analyses. Our experiment with 64 Amazon EC2 8-core instances shows that SociaLite programs performed within a factor of two with respect to ideal weak scaling. Compared to optimized Giraph, an open-source alternative of Pregel, SociaLite programs are 4 to 12 times faster across benchmark algorithms, and 22 times more succinct on average.As a declarative query language, SociaLite, with the help of a compiler that generates efficient parallel and approximate code, can be used easily to create many social apps that operate on large-scale distributed graphs.},
journal = {Proc. VLDB Endow.},
month = {sep},
pages = {1906–1917},
numpages = {12}
}
                  
@article{Valduriez:1988:PET:54616.54618,
	author = {Valduriez, Patrick and Khoshafian, Setrag},
	title = {Parallel Evaluation of the Transitive Closure of a Database Relation},
	journal = {Int. J. Parallel Program.},
	issue_date = {Feb. 1988},
	volume = {17},
	number = {1},
	month = feb,
	year = {1988},
	issn = {0885-7458},
	pages = {19--42},
	numpages = {24},
	xurl = {http://dx.doi.org/10.1007/BF01379321},
	xdoi = {10.1007/BF01379321},
	acmid = {54618},
	publisher = {Kluwer Academic Publishers},
	address = {Norwell, MA, USA},
}

@inproceedings{Cacace:1991,
	author = {Cacace, Filippo and Ceri, Stefano and Houstma, Maurice A. W.},
	title = {An Overview of Parallel Strategies for Transitive Closure on Algebraic Machines},
	booktitle = {Proceedings of the PRISMA Workshop on Parallel Database Systems},
	year = {1991},
	isbn = {0-387-54132-2},
	location = {Noordwijk, The Netherlands},
	pages = {44--62},
	numpages = {19},
	xurl = {http://dl.acm.org/citation.cfm?id=111828.111831},
	acmid = {111831},
	publisher = {Springer-Verlag New York, Inc.},
	address = {New York, NY, USA},
} 
@inproceedings{btree-ppopp,
	author = {Jordan, Herbert and Suboti\'{c}, Pavle and Zhao, David and Scholz, Bernhard},
	title = {A Specialized B-tree for Concurrent Datalog Evaluation},
	booktitle = {Proceedings of the 24th Symposium on Principles and Practice of Parallel Programming},
	series = {PPoPP '19},
	isbn = {978-1-4503-6225-2},
	location = {Washington, District of Columbia},
	pages = {327--339},
	numpages = {13},
	xurl = {http://doi.acm.org/10.1145/3293883.3295719},
	xdoi = {10.1145/3293883.3295719},
	acmid = {3295719},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {B-tree, datalog evaluation, optimistic locking},
} 
@inproceedings{brie-pmam,
	author = {Jordan, Herbert and Suboti\'{c}, Pavle and Zhao, David and Scholz, Bernhard},
	title = {Brie: A Specialized Trie for Concurrent Datalog},
	booktitle = {Proceedings of the 10th International Workshop on Programming Models and Applications for Multicores and Manycores},
	series = {PMAM'19},
	year = {2019},
	isbn = {978-1-4503-6290-0},
	location = {Washington, DC, USA},
	pages = {31--40},
	numpages = {10},
	xurl = {http://doi.acm.org/10.1145/3303084.3309490},
	xdoi = {10.1145/3303084.3309490},
	acmid = {3309490},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Concurrency, Data Structures, Datalog},
} 
@inproceedings{Cheiney:1990,
	author = {Cheiney, Jean-Pierre and de Maindreville, Christophe},
	title = {A Parallel Strategy for Transitive Closure Using Double Hash-based Clustering},
	booktitle = {Proceedings of the Sixteenth International Conference on Very Large Databases},
	year = {1990},
	isbn = {0-55860-149-X},
	location = {Brisbane, Australia},
	pages = {347--358},
	numpages = {12},
	xurl = {http://dl.acm.org/citation.cfm?id=94362.94445},
	acmid = {94445},
	publisher = {Morgan Kaufmann Publishers Inc.},
	address = {San Francisco, CA, USA},
}

@article{Subotic:2018:AIS:3282495.3302538,
	author = {Suboti\'{c}, Pavle and Jordan, Herbert and Chang, Lijun and Fekete, Alan and Scholz, Bernhard},
	title = {Automatic Index Selection for Large-scale Datalog Computation},
	journal = {Proc. VLDB Endow.},
	issue_date = {October 2018},
	volume = {12},
	number = {2},
	month = oct,
	year = {2018},
	issn = {2150-8097},
	pages = {141--153},
	numpages = {13},
	xurl = {https://doi.org/10.14778/3282495.3282500},
	xdoi = {10.14778/3282495.3282500},
	acmid = {3302538},
	publisher = {VLDB Endowment},
} 
@InProceedings{10.1007/978-3-319-41540-6,
	author="Jordan, Herbert
	and Scholz, Bernhard
	and Suboti{\'{c}}, Pavle",
	editor="Chaudhuri, Swarat
	and Farzan, Azadeh",
	title="Souffl{\'e}: On Synthesis of Program Analyzers",
	booktitle="Computer Aided Verification",
	year="2016",
	publisher="Springer International Publishing",
	address="Cham",
	pages="422--430",
	abstract="Souffl{\'e} is an open source programming framework that performs static program analysis expressed in Datalog on very large code bases, including points-to analysis on OpenJDK7 (1.4M program variables, 350K objects, 160K methods) in under a minute. Souffl{\'e} is being successfully used for Java security analyses at Oracle Labs due to (1) its high-performance, (2) support for rapid program analysis development, and (3) customizability. Souffl{\'e} incorporates the highly flexible Datalog-based program analysis paradigm while exhibiting performance results that are on-par with manually developed state-of-the-art tools. In this tool paper, we introduce the Souffl{\'e} architecture, usage and demonstrate its applicability for large-scale code analysis on the OpenJDK7 library as a use case.",
	isbn="978-3-319-41540-6"
}

@inproceedings{Scholz:2016:FLP:2892208.2892226,
	author = {Scholz, Bernhard and Jordan, Herbert and Suboti\'{c}, Pavle and Westmann, Till},
	title = {On Fast Large-scale Program Analysis in Datalog},
	booktitle = {Proceedings of the 25th International Conference on Compiler Construction},
	series = {CC 2016},
	year = {2016},
	isbn = {978-1-4503-4241-4},
	location = {Barcelona, Spain},
	pages = {196--206},
	numpages = {11},
	xurl = {http://doi.acm.org/10.1145/2892208.2892226},
	xdoi = {10.1145/2892208.2892226},
	acmid = {2892226},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Compiler, Datalog, Program Synthesis, Static Program Analysis},
} 
@inproceedings{Smaragdakis:2010,
	author = {Smaragdakis, Yannis and Bravenboer, Martin},
	title = {Using Datalog for Fast and Easy Program Analysis},
	booktitle = {Proceedings of the First International Conference on Datalog Reloaded},
	series = {Datalog'10},
	year = {2011},
	isbn = {978-3-642-24205-2},
	location = {Oxford, UK},
	pages = {245--251},
	numpages = {7},
	acmid = {2185939},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
}

@article{Whaley:2004:CCP:996893.996859,
	author = {Whaley, John and Lam, Monica S.},
	title = {Cloning-based Context-sensitive Pointer Alias Analysis Using Binary Decision Diagrams},
	journal = {SIGPLAN Not.},
	issue_date = {May 2004},
	volume = {39},
	number = {6},
	month = jun,
	year = {2004},
	issn = {0362-1340},
	pages = {131--144},
	numpages = {14},
	xurl = {http://doi.acm.org/10.1145/996893.996859},
	xdoi = {10.1145/996893.996859},
	acmid = {996859},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Datalog, Java, binary decision diagrams, cloning, context-sensitive, inclusion-based, logic programming, pointer analysis, program analysis, scalable},
} 
@INPROCEEDINGS{580029, 
	author={R. {Rudell}}, 
	booktitle={Proceedings of 1993 International Conference on Computer Aided Design (ICCAD)}, 
	title={Dynamic variable ordering for ordered binary decision diagrams}, 
	year={1993}, 
	volume={}, 
	number={}, 
	pages={42-47}, 
	keywords={circuit CAD;ordered binary decision diagrams;OBDD;data structure;Boolean functions;application-specific heuristic algorithms;logic synthesis;heuristic ordering algorithms;minimization algorithm;sifting algorithm;combinational circuit;Data structures;Boolean functions;Heuristic algorithms;Packaging;Combinational circuits;Sequential circuits;Logic;Manipulator dynamics;Circuit synthesis;Minimization}, 
	doi={10.1109/ICCAD.1993.580029}, 
	ISSN={}, 
	month={Nov},}

@INPROCEEDINGS{1586251, 
	author={S. J. {Friedman} and K. J. {Supowit}}, 
	booktitle={24th ACM/IEEE Design Automation Conference}, 
	title={Finding the Optimal Variable Ordering for Binary Decision Diagrams}, 
	year={1987}, 
	volume={}, 
	number={}, 
	pages={348-356}, 
	keywords={Data structures;Boolean functions;Decision trees;Permission;Switches;Logic testing;Computer science;Circuits;Voltage;Scholarships}, 
	doi={10.1145/37888.37941}, 
	ISSN={0738-100X}, 
	month={June},}


@inproceedings{oortwijn2017distributed,
  title={Distributed binary decision diagrams for sbolic reachability},
  author={Oortwijn, Wytse and Dijk, Tom van and Pol, Jaco van de},
  booktitle={Proceedings of the 24th ACM SIGSOFT International SPIN Symposium on Model Checking of Software},
  pages={21--30},
  year={2017},
  organization={ACM}
}



@article{zhang2014abstraction,
  title={On abstraction refinement for program analyses in Datalog},
  author={Zhang, Xin and Mangal, Ravi and Grigore, Radu and Naik, Mayur and Yang, Hongseok},
  journal={ACM SIGPLAN Notices},
  volume={49},
  number={6},
  pages={239--248},
  year={2014},
  publisher={ACM}
}

@article{somenzi1998cudd,
  title={CUDD: CU decision diagram package release 2.3.0},
  author={Somenzi, Fabio},
  journal={University of Colorado at Boulder},
  year={1998}
}

@misc{buddy,
  title={{BuDDy}},
  author={H. Cohen and J. Whaley and J. Wildt and N. Gorogiannis},
  howpublished={\url{https://sourceforge.net/p/buddy}}
}

 
@INPROCEEDINGS{7516069, 
	author={S. {Di} and F. {Cappello}}, 
	booktitle={2016 IEEE International Parallel and Distributed Processing Symposium (IPDPS)}, 
	title={Fast Error-Bounded Lossy HPC Data Compression with SZ}, 
	year={2016}, 
	volume={}, 
	number={}, 
	pages={730-739}, 
	keywords={curve fitting;data compression;optimisation;parallel processing;high performance computing;HPC data compression optimization;Squeeze;SZ;curve fitting model;error-bounded lossy HPC data compression;multidimensional snapshot data linearization;Data models;Data compression;Arrays;Predictive models;Solid modeling;Atmospheric modeling;Magnetohydrodynamics}, 
	doi={10.1109/IPDPS.2016.11}, 
	ISSN={}, 
	month={May},}

@ARTICLE{6876024, 
	author={P. {Lindstrom}}, 
	journal={IEEE Transactions on Visualization and Computer Graphics}, 
	title={Fixed-Rate Compressed Floating-Point Arrays}, 
	year={2014}, 
	volume={20}, 
	number={12}, 
	pages={2674-2683}, 
	keywords={computer graphics;data compression;data visualisation;embedded systems;floating point arithmetic;graphics processing units;random-access storage;storage management;fixed-rate compressed floating-point arrays;floating-point data;fixed-precision values;variable-length bit stream;memory management;near-lossless compression scheme;read and write random access;fixed-rate texture compression methods;graphics hardware;scientific applications;orthogonal block transform;embedded coding;per-block bit stream;bit rate selection;data access;software write-back cache;hardware implementation;fixed-point arithmetic operations;lossy compression;quantitative data analysis;numerical simulation;data visualization;Floating-point arithmetic;Image coding;Encoding;Bandwidth allocation;Data visualization;Computational modeling;Data compression;floating-point arrays;orthogonal block transform;embedded coding}, 
	doi={10.1109/TVCG.2014.2346458}, 
	ISSN={}, 
	month={Dec},}

@inproceedings{Li:2003:PNH:1048935.1050189,
	author = {Li, Jianwei and Li, Jianwei and Li, Jianwei and Liao, Wei-keng and Choudhary, Alok and Ross, Robert and Thakur, Rajeev and Gropp, William and Latham, Rob and Siegel, Andrew and Gallagher, Brad and Zingale, Michael},
	title = {Parallel netCDF: A High-Performance Scientific I/O Interface},
	booktitle = {Proceedings of the 2003 ACM/IEEE Conference on Supercomputing},
	series = {SC '03},
	year = {2003},
	isbn = {1-58113-695-1},
	location = {Phoenix, AZ, USA},
	pages = {39--},
	url = {http://doi.acm.org/10.1145/1048935.1050189},
	doi = {10.1145/1048935.1050189},
	acmid = {1050189},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{Kumar:2019:SPI:3337821.3337875,
	author = {Kumar, Sidharth and Petruzza, Steve and Usher, Will and Pascucci, Valerio},
	title = {Spatially-aware Parallel I/O for Particle Data},
	booktitle = {Proceedings of the 48th International Conference on Parallel Processing},
	series = {ICPP 2019},
	year = {2019},
	isbn = {978-1-4503-6295-5},
	location = {Kyoto, Japan},
	pages = {84:1--84:10},
	articleno = {84},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/3337821.3337875},
	doi = {10.1145/3337821.3337875},
	acmid = {3337875},
	publisher = {ACM},
	address = {New York, NY, USA},
} 
@INPROCEEDINGS{750599, 
	author={R. {Thakur} and W. {Gropp} and E. {Lusk}}, 
	booktitle={Proceedings. Frontiers '99. Seventh Symposium on the Frontiers of Massively Parallel Computation}, 
	title={Data sieving and collective I/O in ROMIO}, 
	year={1999}, 
	volume={}, 
	number={}, 
	pages={182-189}, 
	keywords={parallel processing;performance evaluation;optimisation;data sieving;ROMIO;I/O access patterns;parallel programs;noncontiguous data set;file systems;performance;astrophysics-application template;DIST3D;NAS BTIO benchmark;HP Exemplar IBM SP;Intel Paragon;NEC SX-4;SGI Origin2000;Identity-based encryption;File systems;Read only memory;Mathematics;Computer science;Laboratories;National electric code;Control systems;Parallel machines}, 
	doi={10.1109/FMPC.1999.750599}, 
	ISSN={}, 
	month={Feb},}

@inproceedings{Shan:2008:CPI:1413370.1413413,
	author = {Shan, Hongzhang and Antypas, Katie and Shalf, John},
	title = {Characterizing and Predicting the I/O Performance of HPC Applications Using a Parameterized Synthetic Benchmark},
	booktitle = {Proceedings of the 2008 ACM/IEEE Conference on Supercomputing},
	series = {SC '08},
	year = {2008},
	isbn = {978-1-4244-2835-9},
	location = {Austin, Texas},
	pages = {42:1--42:12},
	articleno = {42},
	numpages = {12},
	url = {http://dl.acm.org/citation.cfm?id=1413370.1413413},
	acmid = {1413413},
	publisher = {IEEE Press},
	address = {Piscataway, NJ, USA},
} 
@ONLINE{hdf5,
	author = {{The HDF Group}},
	title = "{Hierarchical Data Format, version 5}",
	year = {1997-NNNN},
	note = {http://www.hdfgroup.org/HDF5/}
}

@INPROCEEDINGS{6877529, 
	author={Q. {Meng} and A. {Humphrey} and J. {Schmidt} and M. {Berzins}}, 
	booktitle={SC '13: Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis}, 
	title={Investigating applications portability with the uintah DAG-based runtime system on petascale supercomputers}, 
	year={2013}, 
	volume={}, 
	number={}, 
	pages={1-12}, 
	keywords={coprocessors;directed graphs;mainframes;multiprocessing systems;parallel machines;parallel processing;software portability;application portability;Uintah DAG-based runtime system;petascale supercomputers;high performance computing;application code;multicore nodes;coprocessors;software frameworks;machine-independent application code;runtime system;structured adaptive grids;fluid-flow solvers;particle-based solid methods;directed acyclic graphs;computational tasks;scalable asynchronous system;dynamic runtime system;CPU cores;Top500 machines;OLCF Titan;TACC Stampede;ALCF Mira;multiscale multiphysics engineering problems;Graphics processing units;Scalability;Runtime;Mathematical model;Computational modeling;Data warehouses;Uintah;hybrid parallelism;scalability;parallel;adaptive;Xeon Phi;Blue Gene/Q;heterogeneous systems;GPU;co-processor}, 
	doi={}, 
	ISSN={}, 
	month={Nov},}

@INPROCEEDINGS{6665353,
author={Y. {Tian} and S. {Klasky} and W. {Yu} and B. {Wang} and H. {Abbasi} and N. {Podhorszki} and R. {Grout}},
booktitle={2013 IEEE Eighth International Conference on Networking, Architecture and Storage}, 
title={DynaM: Dynamic Multiresolution Data Representation for Large-Scale Scientific Analysis}, 
year={2013},
volume={},
number={},
pages={115-124},}

@INPROCEEDINGS{6092314,
author={J. {Woodring} and S. {Mniszewski} and C. {Brislawn} and D. {DeMarle} and J. {Ahrens}},
booktitle={2011 IEEE Symposium on Large Data Analysis and Visualization}, 
title={Revisiting wavelet compression for large-scale climate data using JPEG 2000 and ensuring data precision}, 
year={2011},
volume={},
number={},
pages={31-38},}


@INPROCEEDINGS{1592821,
author={V. {Pascucci} and R. J. {Frank}},
booktitle={SC '01: Proceedings of the 2001 ACM/IEEE Conference on Supercomputing}, 
title={Global Static Indexing for Real-Time Exploration of Very Large Regular Grids}, 
year={2001},
volume={},
number={},
pages={45-45},}

@ARTICLE{6876024,
author={P. {Lindstrom}},
journal={IEEE Transactions on Visualization and Computer Graphics}, 
title={Fixed-Rate Compressed Floating-Point Arrays}, 
year={2014},
volume={20},
number={12},
pages={2674-2683},}

@inproceedings{10.1145/956863.956872,
	author = {Baldwin, Chuck and Abdulla, Ghaleb and Critchlow, Terence},
	title = {Multi-Resolution Modeling of Large Scale Scientific Simulation Data},
	year = {2003},
	isbn = {1581137230},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/956863.956872},
	doi = {10.1145/956863.956872},
	booktitle = {Proceedings of the Twelfth International Conference on Information and Knowledge Management},
	pages = {40–48},
	numpages = {9},
	keywords = {scientific data processing, compression, data modeling, wavelets},
	location = {New Orleans, LA, USA},
	series = {CIKM ’03}
}

@inproceedings{csafe2,
Author = {J. D. de St. Germain and J. McCorquodale and S. G. Parker and C. R. Johnson},
Booktitle = {Ninth {IEEE} International Symposium on High Performance and Distributed Computing},
Date-Modified = {2014-04-15 19:40:15 +0000},
Keywords = {scirun, uintah, csafe},
Month = {November},
Pages = {33--41},
Publisher = {{IEEE}, Piscataway, NJ},
Title = {{U}intah: {A} Massively Parallel Problem Solving Environment},
Year = {2000}}



@article{csafe3,
Author = {S. G. Parker and J. Guilkey and T. Harman},
Journal = {Engineering with Computers},
Pages = {277--292},
Title = {A component-based parallel infrastructure for the simulation of fluid-structure interaction},
Volume = {22},
Year = {2006}}


@article{csafe4,
Author = {S. G. Parker},
Date-Modified = {2014-04-14 17:36:48 +0000},
Journal = {Future Generation Computer Systems},
Pages = {204--216},
Title = {A component-based architecture for parallel multi-physics {PDE} simulation.},
Volume = {22},
Year = {2006}}


@inproceedings{sc13-uintah,
Author = {Q. Meng and A. Humphrey and J. Schmidt and M. Berzins},
Booktitle = {Proceedings of SC13: International Conference for High Performance Computing, Networking, Storage and Analysis},
Date-Modified = {2014-04-15 16:41:40 +0000},
Pages = {96:1--96:12},
Publisher = {ACM},
Title = {{Investigating applications portability with the Uintah DAG-Based runtime system on PetScale supercomputers}},
Year = {2013}}

@conference{csd-09,
title={Terascale Direct Numerical Simulations of Turbulent Combustion using S3D},
author={J H Chen and A Choudhary and B de Supinski and M DeVries and E R Hawkes and S Klasky and W K Liao and K L Ma and J Mellor Crummey and N Podhorszki and R Sankaran and S Shende and C S Yoo},
booktitle={Computational Science and Discovery Volume 2},
month={January},
year={2009},
}

@InProceedings{adios2008clade, 
	author = {Lofstead, J. and Klasky, S. and Schwan, K. and Podhorszki, N. and Jin, C.},
title = {Flexible {IO} and Integration for Scientific Codes Through The
Adaptable {IO} System ({ADIOS})},
booktitle = {Proceedings of the 6th International Workshop on Challenges of Large Applications in Distributed Environments, {CLADE} '08},
year = {2008},
month = {June},
address = {New York},
publisher = {ACM},
pages = {15-24},
}

@inproceedings{li:PnetCDF,
author = {Jianwei Li and Wei-Keng Liao and Alok Choudhary and Robert Ross and Rajeev Thakur and William Gropp and Rob Latham and Andrew Siegel and Brad Gallagher and Michael Zingale},
title = {Parallel {netCDF}: A High-Performance Scientific {I/O} Interface},
booktitle = {Proceedings of SC2003: High Performance Networking and Computing},
year = {2003},
month = {November},
publisher = {IEEE Computer Society Press},
address = {Phoenix, AZ},
keywords = {parallel I/O interface, netCDF, MPI-IO, pario-bib}
}

@misc{hdf5-web,
title = {{HDF5} Home Page},
key = {HDF5},
howpublished = {http://www.hdfgroup.org/HDF5/}
}

@misc{h5z-zfp-web,
	title = {{HDF5-ZFP} Home Page},
	key = {h5z-zfp},
	howpublished = {https://h5z-zfp.readthedocs.io/en/latest/}
}


@conference{idx-pdsw,

title={Towards Parallel Access of Multi-dimensional, Multiresolution
Scientific Data},

author={Sidharth Kumar and Valerio Pascucci and Venkatram Vishwanath and
Philip Carns and Robert Latham and Tom Peterka and Michael Papka and Robert Ross},

booktitle={Proceedings of 2010 Petascale Data Storage Workshop},

month={November},

year={2010},

}


@conference{pidx-cluster,

title = {{PIDX}: Efficient Parallel {I/O} for Multi-resolution
Multi-dimensional Scientific Datasets},

author = {Sidharth Kumar and Venkatram Vishwanath and Philip Carns and Brian Summa and Giorgio Scorzelli and Valerio Pascucci and Robert Ross and Jacqueline Chen and Hemanth Kolla and Ray Grout},

booktitle = {{IEEE} International Conference on Cluster Computing},

year = {2011}

}


@INPROCEEDINGS{kumar2012efficient,

author={Kumar, S. and Vishwanath, V. and Carns, P. and Levine, J.A and Latham, R. and Scorzelli, G. and Kolla, H. and Grout, R. and Ross, R. and Papka, M.E. and Chen, J. and Pascucci, V.},

booktitle={High Performance Computing, Networking, Storage and Analysis (SC), 2012 International Conference for},

title={Efficient data restructuring and aggregation for {I/O} acceleration in {PIDX}},

year={2012},

month={Nov},

pages={1-11},

keywords={data structures;data visualisation;digital simulation;parallel machines;Cartesian coordinate scheme;Cray-XE6 platforms;HZ;IBM Blue Gene-P platforms;IO acceleration;PIDX;S3D combustion application;data aggregation;data restructuring;data-ordering methods;hierarchical Z ordering;high performance computing simulation;interactive analysis;large-scale simulation visualization;multiresolution data representations;network access patterns;one-dimensional array;sparse memory;Data models;Data visualization;Encoding;Layout;Libraries;Memory management;Writing},

doi={10.1109/SC.2012.54},

ISSN={2167-4329},}


@inproceedings{Kumar:2013,

author = {Kumar, Sidharth and Saha, Avishek and Vishwanath, Venkatram and Carns, Philip and Schmidt, John A. and Scorzelli, Giorgio and Kolla, Hemanth and Grout, Ray and Latham, Robert and Ross, Robert and Papkafa, Michael E. and Chen, Jacqueline and Pascucci, Valerio},

title = {Characterization and Modeling of PIDX Parallel {I/O} for Performance Optimization},

booktitle = {Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis},

series = {SC '13},

year = {2013},

isbn = {978-1-4503-2378-9},

location = {Denver, Colorado},

pages = {67:1--67:12},

articleno = {67},

numpages = {12},

doi = {10.1145/2503210.2503252},

acmid = {2503252},

publisher = {ACM},

address = {New York, NY, USA},

keywords = {I/O \& network characterization, performance modeling},

}


@incollection{isc-kumar,

year={2014},

isbn={978-3-319-07517-4},

booktitle={Supercomputing},

volume={8488},

series={Lecture Notes in Computer Science},

editor={Kunkel, JulianMartin and Ludwig, Thomas and Meuer, HansWerner},

doi={10.1007/978-3-319-07518-1_20},

title={Fast Multiresolution Reads of Massive Simulation Datasets},

publisher={Springer International Publishing},

keywords={parallel I/O; multiresolution; PIDX; read performance; interactive visualization; S3D; Uintah; VisIt},

author={Kumar, Sidharth and Christensen, Cameron and Schmidt, JohnA. and Bremer, Peer-Timo and Brugger, Eric and Vishwanath, Venkatram and Carns, Philip and Kolla, Hemanth and Grout, Ray and Chen, Jacqueline and Berzins, Martin and Scorzelli, Giorgio and Pascucci, Valerio},

pages={314-330},

language={English}

}


@inproceedings{kumar2014efficient,

title={Efficient {I/O} and storage of adaptive-resolution data},

author={Kumar, Sidharth and Edwards, John and Bremer, Peer-Timo and Knoll, Aaron and Christensen, Cameron and Vishwanath, Venkatram and Carns, Philip and Schmidt, John A and Pascucci, Valerio},

booktitle={Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis},

pages={413--423},

year={2014},

organization={IEEE Press}

}

@incollection{pascucci2003hierarchical,

title={Hierarchical indexing for out-of-core access to multi-resolution data},

author={Pascucci, Valerio and Frank, Randall J},

booktitle={Hierarchical and Geometrical Methods in Scientific Visualization},

pages={225--241},

year={2003},

publisher={Springer}

}

@article{GODOY2020100561,
	title = "ADIOS 2: The Adaptable Input Output System. A framework for high-performance data management",
	journal = "SoftwareX",
	volume = "12",
	pages = "100561",
	year = "2020",
	issn = "2352-7110",
	doi = "https://doi.org/10.1016/j.softx.2020.100561",
	url = "http://www.sciencedirect.com/science/article/pii/S2352711019302560",
	author = "William F. Godoy and Norbert Podhorszki and Ruonan Wang and Chuck Atkins and Greg Eisenhauer and Junmin Gu and Philip Davis and Jong Choi and Kai Germaschewski and Kevin Huck and Axel Huebl and Mark Kim and James Kress and Tahsin Kurc and Qing Liu and Jeremy Logan and Kshitij Mehta and George Ostrouchov and Manish Parashar and Franz Poeschel and David Pugmire and Eric Suchyta and Keichi Takahashi and Nick Thompson and Seiji Tsutsumi and Lipeng Wan and Matthew Wolf and Kesheng Wu and Scott Klasky",
	keywords = "High-performance computing (HPC), Scalable I/O, Luster GPFS file systems, Staging, RDMA, Data science, In-situ, Exascale computing",
	abstract = "We present ADIOS 2, the latest version of the Adaptable Input Output (I/O) System. ADIOS 2 addresses scientific data management needs ranging from scalable I/O in supercomputers, to data analysis in personal computer and cloud systems. Version 2 introduces a unified application programming interface (API) that enables seamless data movement through files, wide-area-networks, and direct memory access, as well as high-level APIs for data analysis. The internal architecture provides a set of reusable and extendable components for managing data presentation and transport mechanisms for new applications. ADIOS 2 bindings are available in C++11, C, Fortran, Python, and Matlab and are currently used across different scientific communities. ADIOS 2 provides a communal framework to tackle data management challenges as we approach the exascale era of supercomputing."
}

@INPROCEEDINGS{6092178, 

author={Vishwanath, V. and Hereld, M. and Papka, M.E.}, 

booktitle={Large Data Analysis and Visualization (LDAV), 2011 IEEE Symposium on}, 

title={Toward simulation-time data analysis and {I/O} acceleration on leadership-class systems}, 

year={2011}, 

month={Oct}, 

pages={9-14}, 

keywords={data analysis;input-output programs;GLEAN;I/O acceleration;current-generation HPC systems;leadership-class systems;simulation-time data analysis;Analytical models;Computational modeling;Data analysis;Data models;Data visualization;Fractals;Network topology}, 

doi={10.1109/LDAV.2011.6092178},}


@INPROCEEDINGS{7013070,

author={A. G. {Landge} and V. {Pascucci} and A. {Gyulassy} and J. C. {Bennett} and H. {Kolla} and J. {Chen} and P. {Bremer}},

booktitle={SC '14: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis}, 

title={In-Situ Feature Extraction of Large Scale Combustion Simulations Using Segmented Merge Trees}, 

year={2014},

volume={},

number={},

pages={1020-1031},}

@INPROCEEDINGS{558080,

author={R. {Thakur} and W. {Gropp} and E. {Lusk}},

booktitle={Proceedings of 6th Symposium on the Frontiers of Massively Parallel Computation (Frontiers '96)}, 

title={An abstract-device interface for implementing portable parallel-I/O interfaces}, 

year={1996},

volume={},

number={},

pages={180-187},}


@INPROCEEDINGS{750599,

author={R. {Thakur} and W. {Gropp} and E. {Lusk}},

booktitle={Proceedings. Frontiers '99. Seventh Symposium on the Frontiers of Massively Parallel Computation}, 

title={Data sieving and collective I/O in ROMIO}, 

year={1999},

volume={},

number={},

pages={182-189},}

@misc{visit-web,

key = {VisIt},

title = {{VisIt} Home Page},

howpublished = {https://wci.llnl.gov/codes/visit/},

}


@misc{paraview-web,

key = {ParaView},

title = {{ParaView} Home Page},

howpublished = {http://www.paraview.org/},

}

@inproceedings{schatz_interactive_2016,
	title = {Interactive {{Visual Exploration}} of a {{Trillion Particles}}},
	booktitle = {{{LDAV}}},
	author = {Schatz, Karsten and Muller, Christoph and Krone, Michael and Schneider, Jens and Reina, Guido and Ertl, Thomas},
	year = {2016},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\34ZKQURW\\Schatz et al. - 2016 - Interactive Visual Exploration of a Trillion Parti.pdf}
}

@article{fraedrich_exploring_2009,
	title = {Exploring the {{Millennium Run}}\textendash{{Scalable Rendering}} of {{Large}}-{{Scale Cosmological Datasets}}},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Fraedrich, Roland and Schneider, Jens and Westermann, R{\"u}diger},
	year = {2009},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\DIE5N78E\\Fraedrich et al. - 2009 - Exploring the Millennium Run–Scalable Rendering of.pdf}
}

@inproceedings{wald_cpu_2015,
	title = {{{CPU Ray Tracing Large Particle Data}} with {{Balanced P}}-k-d {{Trees}}},
	booktitle = {2015 {{IEEE Scientific Visualization Conference}} ({{SciVis}})},
	author = {Wald, Ingo and Knoll, Aaron and Johnson, Greg P. and Usher, Will and Pascucci, Valerio and Papka, Michael E.},
	year = {2015},
	keywords = {Computer graphics},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\4525ZVV6\\Wald et al. - 2015 - CPU Ray Tracing Large Particle Data with Balanced .pdf}
}

@inproceedings{lefebvre_perfect_2006,
	title = {Perfect Spatial Hashing},
	booktitle = {{{ACM Transactions}} on {{Graphics}} ({{TOG}})},
	author = {Lefebvre, Sylvain and Hoppe, Hugues},
	year = {2006},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\MMBMBFZC\\Lefebvre and Hoppe - 2006 - Perfect spatial hashing.pdf}
}

@inproceedings{kumar_efficient_2014,
	title = {Efficient {{I}}/{{O}} and Storage of Adaptive-Resolution Data},
	booktitle = {{{SC14}}: {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
	author = {Kumar, Sidharth and Edwards, John and Bremer, Peer-Timo and Knoll, Aaron and Christensen, Cameron and Vishwanath, Venkatram and Carns, Philip and Schmidt, John A. and Pascucci, Valerio},
	year = {2014},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\DI2AHGC2\\Kumar et al. - 2014 - Efficient IO and storage of adaptive-resolution d.pdf}
}

@inproceedings{rizzi_large-scale_2015,
	title = {Large-{{Scale Parallel Visualization}} of {{Particle}}-{{Based Simulations}} Using {{Point Sprites}} and {{Level}}-{{Of}}-{{Detail}}},
	booktitle = {{{EGPGV}}},
	author = {Rizzi, Silvio and Hereld, Mark and Insley, Joseph and Papka, Michael E. and Uram, Thomas and Vishwanath, Venkatram},
	year = {2015},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\C9UKZNDT\\Rizzi et al. - 2015 - Large-Scale Parallel Visualization of Particle-Bas.pdf}
}

@article{habib_hacc_2016,
	title = {{{HACC}}: {{Simulating}} Sky Surveys on State-of-the-Art Supercomputing Architectures},
	journal = {New Astronomy},
	author = {Habib, Salman and Pope, Adrian and Finkel, Hal and Frontiere, Nicholas and Heitmann, Katrin and Daniel, David and Fasel, Patricia and Morozov, Vitali and Zagaris, George and Peterka, Tom and others},
	year = {2016},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\ZDB2TRG9\\Habib et al. - 2016 - HACC Simulating sky surveys on state-of-the-art s.pdf}
}

@article{woodring_-situ_2011,
	title = {In-Situ {{Sampling}} of a {{Large}}-{{Scale Particle Simulation}} for {{Interactive Visualization}} and {{Analysis}}},
	journal = {Computer Graphics Forum},
	author = {Woodring, J. and Ahrens, J. and Figg, J. and Wendelberger, J. and Habib, S. and Heitmann, K.},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\N388MZB5\\Woodring et al. - 2011 - In-situ Sampling of a Large-Scale Particle Simulat.pdf}
}

@inproceedings{karras_maximizing_2012,
	title = {Maximizing {Parallelism} in the {Construction} of {{BVHs}}, {Octrees}, and k-d {Trees}},
	booktitle = {Proceedings of the {{Fourth ACM SIGGRAPH}}/{{Eurographics}} Conference on {{High}}-{{Performance Graphics}}},
	author = {Karras, Tero},
	year = {2012},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\B9VSKNG8\\Karras - 2012 - Maximizing parallelism in the construction of BVHs.pdf}
}

@inproceedings{hopf_hierarchical_2003,
	title = {Hierarchical Splatting of Scattered Data},
	booktitle = {Proceedings of the 14th {{IEEE Visualization}} 2003 ({{VIS}}'03)},
	author = {Hopf, Matthias and Ertl, Thomas},
	year = {2003},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\I86AZHHG\\Hopf and Ertl - 2003 - Hierarchical splatting of scattered data.pdf}
}

@inproceedings{pascucci_global_2001,
	title = {Global Static Indexing for Real-Time Exploration of Very Large Regular Grids},
	booktitle = {Supercomputing, {{ACM}}/{{IEEE}} 2001 {{Conference}}},
	author = {Pascucci, Valerio and Frank, Randall J.},
	year = {2001},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\KVSD9IUM\\Pascucci and Frank - 2001 - Global static indexing for real-time exploration o.pdf}
}

@inproceedings{kumar_pidx_2011,
	title = {{{PIDX}}: {{Efficient}} Parallel {{I}}/{{O}} for Multi-Resolution Multi-Dimensional Scientific Datasets},
	booktitle = {Cluster {{Computing}} ({{CLUSTER}}), 2011 {{IEEE International Conference}} On},
	author = {Kumar, Sidharth and Vishwanath, Venkatram and Carns, Philip and Summa, Brian and Scorzelli, Giorgio and Pascucci, Valerio and Ross, Robert and Chen, Jacqueline and Kolla, Hemanth and Grout, Ray},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\XS3P2ER9\\Kumar et al. - 2011 - PIDX Efficient parallel IO for multi-resolution .pdf}
}

@inproceedings{kumar_efficient_2012,
	title = {Efficient Data Restructuring and Aggregation for {{I}}/{{O}} Acceleration in {{PIDX}}},
	booktitle = {Proceedings of the {{International Conference}} on {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
	author = {Kumar, Sidharth and Vishwanath, Venkatram and Carns, Philip and Levine, Joshua A. and Latham, Robert and Scorzelli, Giorgio and Kolla, Hemanth and Grout, Ray and Ross, Robert and Papka, Michael E. and others},
	year = {2012},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\E3QBN8QR\\Kumar et al. - 2012 - Efficient data restructuring and aggregation for I.pdf}
}

@incollection{pascucci_hierarchical_2003,
	title = {Hierarchical Indexing for Out-of-Core Access to Multi-Resolution Data},
	booktitle = {Hierarchical and {{Geometrical Methods}} in {{Scientific Visualization}}},
	author = {Pascucci, Valerio and Frank, Randall J.},
	year = {2003},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\5AUBWCAB\\Pascucci and Frank - 2003 - Hierarchical indexing for out-of-core access to mu.pdf}
}

@inproceedings{pascucci_real-time_2003,
	title = {Real-Time Monitoring of Large Scientific Simulations},
	author = {Pascucci, Valerio and Laney, D. E. and Frank, Randall J. and Scorzelli, Giorgio and Linsen, L. and Hamann, B. and Gygi, F.},
	year = {2003},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\V27T27TU\\Pascucci et al. - 2003 - Real-time monitoring of large scientific simulatio.pdf}
}

@inproceedings{byna_parallel_2012,
	title = {Parallel {{I}}/{{O}}, Analysis, and Visualization of a Trillion Particle Simulation},
	booktitle = {High {{Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}} ({{SC}}), 2012 {{International Conference}} For},
	author = {Byna, Surendra and Chou, Jerry and Rubel, Oliver and Karimabadi, Homa and Daughter, William S. and Roytershteyn, Vadim and Bethel, E. Wes and Howison, Mark and Hsu, Ke-Jou and Lin, Kuan-Wu and others},
	year = {2012},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\REBC62BZ\\Byna et al. - 2012 - Parallel IO, analysis, and visualization of a tri.pdf}
}

@article{hadwiger_sparseleap_2017,
	title = {{{SparseLeap}}: {{Efficient Empty Space Skipping}} for {{Large}}-{{Scale Volume Rendering}}},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Hadwiger, Markus and {Al-Awami}, Ali K. and Beyer, Johanna and Agus, Marco and Pfister, Hanspeter},
	year = {2017},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\7A26W9WV\\Hadwiger et al. - 2017 - SparseLeap Efficient Empty Space Skipping for Lar.pdf}
}

@article{wald_embree_2014,
	title = {Embree: {{A Kernel Framework}} for {{Efficient CPU Ray Tracing}}},
	journal = {ACM Transactions on Graphics},
	author = {Wald, Ingo and Woop, Sven and Benthin, Carsten and Johnson, Gregory S. and Ernst, Manfred},
	year = {2014},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\SZ99UE67\\Wald et al. - 2014 - Embree A Kernel Framework for Efficient CPU Ray T.pdf}
}

@article{wald_ospray_2017,
	title = {{{OSPRay}} \textendash{} {{A CPU Ray Tracing Framework}} for {{Scientific Visualization}}},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Wald, Ingo and Johnson, Greg P. and Amstutz, Jefferson and Brownlee, Carson and Knoll, Aaron and Jeffers, Jim and G{\"u}nther, Johannes and Navr{\'a}til, Paul},
	year = {2017},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\A5GVI3SA\\Wald et al. - 2017 - OSPRay - A CPU Ray Tracing Framework for Scientifi.pdf}
}

@article{gribble_coherent_2007,
	title = {A {{Coherent Grid Traversal Approach}} to {{Visualizing Particle}}-{{Based Simulation Data}}},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Gribble, Christiaan P. and Ize, Thiago and Kensler, Andrew and Wald, Ingo and Parker, Steven G.},
	year = {2007},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\C9CWSWGH\\Gribble et al. - 2007 - A Coherent Grid Traversal Approach to Visualizing .pdf}
}
                  

@article{Shahrivari:2015,
	Author = {Shahrivari, Saeed and Jalili, Saeed},
	Da = {2015/11/01},
	Doi = {10.1007/s00607-015-0446-9},
	Id = {Shahrivari2015},
	Isbn = {1436-5057},
	Journal = {Computing},
	Number = {11},
	Pages = {1101--1120},
	Title = {Distributed discovery of frequent subgraphs of a network using MapReduce},
	Ty = {JOUR},
	Url = {https://doi.org/10.1007/s00607-015-0446-9},
	Volume = {97},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.1007/s00607-015-0446-9}}

@inproceedings{su_taming_2013,
	title = {Taming Massive Distributed Datasets: Data Sampling Using Bitmap Indices},
	booktitle = {Proceedings of the 22nd International Symposium on {{High}}-Performance Parallel and Distributed Computing},
	author = {Su, Yu and Agrawal, Gagan and Woodring, Jonathan and Myers, Kary and Wendelberger, Joanne and Ahrens, James},
	year = {2013},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\MWR8BVV6\\Su et al. - 2013 - Taming massive distributed datasets data sampling.pdf}
}

@inproceedings{su_-situ_2015,
	title = {In-{{Situ Bitmaps Generation}} and {{Efficient Data Analysis}} Based on {{Bitmaps}}},
	author = {Su, Yu and Wang, Yi and Agrawal, Gagan},
	year = {2015},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\Z7ZK58K8\\Su et al. - 2015 - In-Situ Bitmaps Generation and Efficient Data Anal.pdf}
}

@inproceedings{chou_parallel_2011,
	title = {Parallel Index and Query for Large Scale Data Analysis},
	booktitle = {High {{Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}} ({{SC}}), 2011 {{International Conference}} For},
	author = {Chou, Jerry and Wu, Kesheng and Rubel, Oliver and Howison, Mark and Qiang, Ji and Austin, Brian and Bethel, E. Wes and Ryne, Rob D. and Shoshani, Arie},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\9HTJE4P5\\Chou et al. - 2011 - Parallel index and query for large scale data anal.pdf}
}

@inproceedings{kim_parallel_2011,
	title = {Parallel in Situ Indexing for Data-Intensive Computing},
	booktitle = {Large {{Data Analysis}} and {{Visualization}} ({{LDAV}}), 2011 {{IEEE Symposium}} On},
	author = {Kim, Jinoh and Abbasi, Hasan and Chacon, Luis and Docan, Ciprian and Klasky, Scott and Liu, Qing and Podhorszki, Norbert and Shoshani, Arie and Wu, Kesheng},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\2C2EC7NQ\\Kim et al. - 2011 - Parallel in situ indexing for data-intensive compu.pdf}
}

@inproceedings{zheng_predatapreparatory_2010,
	title = {{{PreDatA}}\textendash{{Preparatory Data Analytics}} on {{Peta}}-Scale {{Machines}}},
	booktitle = {{{IEEE International Symposium}} on {{Parallel}} \& {{Distributed Processing}} ({{IPDPS}})},
	author = {Zheng, Fang and Abbasi, Hasan and Docan, Ciprian and Lofstead, Jay and Liu, Qing and Klasky, Scott and Parashar, Manish and Podhorszki, Norbert and Schwan, Karsten and Wolf, Matthew},
	year = {2010},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\UG6RPZZ5\\Zheng et al. - 2010 - PreDatA–preparatory data analytics on peta-scale m.pdf}
}

@article{wu_analyses_2010,
	title = {Analyses of Multi-Level and Multi-Component Compressed Bitmap Indexes},
	journal = {ACM Transactions on Database Systems},
	author = {Wu, Kesheng and Shoshani, Arie and Stockinger, Kurt},
	year = {2010},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\SMX23ZGC\\Wu et al. - 2010 - Analyses of multi-level and multi-component compre.pdf}
}

@article{wu_optimizing_2006,
	title = {Optimizing Bitmap Indices with Efficient Compression},
	journal = {ACM Transactions on Database Systems (TODS)},
	author = {Wu, Kesheng and Otoo, Ekow J. and Shoshani, Arie},
	year = {2006},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\8GRU7WSA\\Wu et al. - 2006 - Optimizing bitmap indices with efficient compressi.pdf}
}

@inproceedings{wu_using_2003,
	title = {Using Bitmap Index for Interactive Exploration of Large Datasets},
	booktitle = {Scientific and {{Statistical Database Management}}, 2003. 15th International Conference On},
	author = {Wu, Kesheng and Koegler, Wendy and Chen, Jacqueline and Shoshani, Arie},
	year = {2003},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\MXBQXTKG\\Wu et al. - 2003 - Using bitmap index for interactive exploration of .pdf}
}

@incollection{kumar_scalable_2018,
	title = {Scalable {{Data Management}} of the {{Uintah Simulation Framework}} for {{Next}}-{{Generation Engineering Problems}} with {{Radiation}}},
	booktitle = {Supercomputing {{Frontiers}}},
	author = {Kumar, Sidharth and Humphrey, Alan and Usher, Will and Petruzza, Steve and Peterson, Brad and Schmidt, John A. and Harris, Derek and Isaac, Ben and Thornock, Jeremy and Harman, Todd and Pascucci, Valerio and Berzins, Martin},
	year = {2018},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\R5MFAUN3\\Kumar et al. - 2018 - Scalable Data Management of the Uintah Simulation .pdf}
}

@inproceedings{meng_uintah_2012,
	title = {The {{Uintah}} Framework: {{A}} Unified Heterogeneous Task Scheduling and Runtime System},
	booktitle = {High {{Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}} ({{SCC}}), 2012 {{SC Companion}}:},
	author = {Meng, Qingyu and Humphrey, Alan and Berzins, Martin},
	year = {2012},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\3Q5KMAF2\\Meng et al. - 2012 - The Uintah framework A unified heterogeneous task.pdf}
}

@inproceedings{byna_tuning_2017,
	title = {Tuning {{HDF5}} Subfiling Performance on Parallel file Systems},
	booktitle = {Cray {{User Group}}},
	author = {Byna, Suren and Chaarawi, Mohamad and Koziol, Quincey and Mainzer, John and Willmore, Frank},
	year = {2017},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\UUNUBSDN\\Byna et al. - Tuning HDF5 subﬁling performance on parallel ﬁle s.pdf}
}

@inproceedings{kumar_reducing_2017,
	title = {Reducing {{Network Congestion}} and {{Synchronization Overhead During Aggregation}} of {{Hierarchical Data}}},
	booktitle = {2017 {{IEEE}} 24th {{International Conference}} on {{High Performance Computing}} ({{HiPC}})},
	author = {Kumar, Sidharth and Hoang, Duong and Petruzza, Steve and Edwards, John and Pascucci, Valerio},
	year = {2017},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\7JZ23K8S\\Kumar et al. - 2017 - Reducing Network Congestion and Synchronization Ov.pdf}
}

@inproceedings{zheng_scaling_2018,
	title = {Scaling {{Embedded In}}-{{Situ Indexing}} with {{DeltaFS}}},
	booktitle = {Proceedings of the {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}}, and {{Analysis}}},
	author = {Zheng, Qing and Cranor, Charles D and Guo, Danhao and Ganger, Gregory R and Amvrosiadis, George and Gibson, Garth A and Settlemyer, Bradley W and Grider, Gary and Guo, Fan},
	year = {2018},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\9CE6YSZ4\\Zheng et al. - 2018 - Scaling Embedded In-Situ Indexing with DeltaFS.pdf}
}

@article{byna_trillion_2013,
	title = {Trillion {{Particles}}, 120,000 Cores, and 350 {{TBs}}: {{Lessons Learned}} from a {{Hero I}}/{{O Run}} on {{Hopper}}},
	author = {Byna, Surendra and Uselton, Andrew and Knaak, David},
	year = {2013},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\Y3QZ4AZ6\\Byna et al. - Trillion Particles, 120,000 cores, and 350 TBs Le.pdf}
}

@inproceedings{su_indexing_2012,
	title = {Indexing and {{Parallel Query Processing Support}} for {{Visualizing Climate Datasets}}},
	booktitle = {2012 41st {{International Conference}} on {{Parallel Processing}}},
	author = {Su, Yu and Agrawal, Gagan and Woodring, Jonathan},
	year = {2012},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\PK9GUMN5\\Su et al. - 2012 - Indexing and Parallel Query Processing Support for.pdf}
}

@inproceedings{kumar_fast_2014,
	title = {Fast {{Multiresolution Reads}} of {{Massive Simulation Datasets}}},
	booktitle = {Supercomputing},
	author = {Kumar, Sidharth and Christensen, Cameron and Schmidt, John A. and Bremer, Peer-Timo and Brugger, Eric and Vishwanath, Venkatram and Carns, Philip and Kolla, Hemanth and Grout, Ray and Chen, Jacqueline and Berzins, Martin and Scorzelli, Giorgio and Pascucci, Valerio},
	year = {2014},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\CZP6QKS7\\Kumar et al. - 2014 - Fast Multiresolution Reads of Massive Simulation D.pdf}
}

@inproceedings{blanas_parallel_2014,
	title = {Parallel Data Analysis Directly on Scientific File Formats},
	booktitle = {Proceedings of the 2014 {{ACM SIGMOD}} International Conference on {{Management}} of Data - {{SIGMOD}} '14},
	author = {Blanas, Spyros and Wu, Kesheng and Byna, Surendra and Dong, Bin and Shoshani, Arie},
	year = {2014},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\I7H5E43B\\Blanas et al. - 2014 - Parallel data analysis directly on scientific file.pdf}
}

@article{sinha_multi-resolution_2007,
	title = {Multi-Resolution Bitmap Indexes for Scientific Data},
	journal = {ACM Transactions on Database Systems},
	author = {Sinha, Rishi Rakesh and Winslett, Marianne},
	year = {2007},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\AYK67U2N\\Sinha and Winslett - 2007 - Multi-resolution bitmap indexes for scientific dat.pdf}
}

@article{usher_scalable_2019,
	title = {Scalable {{Ray Tracing Using}} the {{Distributed FrameBuffer}}},
	journal = {Computer Graphics Forum},
	author = {Usher, Will and Wald, Ingo and Amstutz, Jefferson and G{\"u}nther, Johannes and Brownlee, Carson and Pascucci, Valerio},
	year = {2019},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\PQDNFDA9\\Usher et al. - 2019 - Scalable Ray Tracing Using the Distributed FrameBu.pdf}
}

@inproceedings{brown_overview_2010,
	title = {Overview of {{sciDB}}: Large Scale Array Storage, Processing and Analysis},
	booktitle = {Proceedings of the 2010 International Conference on {{Management}} of Data - {{SIGMOD}} '10},
	author = {Brown, Paul G.},
	year = {2010},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\ACSZ3D8B\\Brown - 2010 - Overview of sciDB large scale array storage, proc.pdf}
}

@InProceedings{z3,
	author="de Moura, Leonardo
	and Bj{\o}rner, Nikolaj",
	editor="Ramakrishnan, C. R.
	and Rehof, Jakob",
	title="Z3: An Efficient SMT Solver",
	booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
	year="2008",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="337--340",
	isbn="978-3-540-78800-3"
}
                  
@article{formulog-bembenek2020,
	title={Formulog: Datalog for SMT-based static analysis},
	author={Bembenek, Aaron and Greenberg, Michael and Chong, Stephen},
	journal={Proceedings of the ACM on Programming Languages},
	volume={4},
	number={OOPSLA},
	pages={1--31},
	year={2020},
	publisher={ACM New York, NY, USA}
}

@INPROCEEDINGS{Siddiqui:2010,
	author={J. H. {Siddiqui} and S. {Khurshid}},
	booktitle={2010 2nd International Conference on Software Technology and Engineering}, 
	title={ParSym: Parallel symbolic execution}, 
	year={2010},
	volume={1},
	number={},
	pages={V1-405-V1-409}
}
                  
@article{chan_efficient_1999,
	title = {An {{Efficient Bitmap Encoding Scheme}} for {{Selection Queries}}},
	journal = {SIGMOD Record},
	author = {Chan, Chee-Yong and Ioannidis, Yannis E},
	year = {1999},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\ZLLQ7WWD\\Chan and Ioannidis - An Efficient Bitmap Encoding Scheme for Selection .pdf}
}

@inproceedings{kumar_spatially-aware_2019,
	title = {Spatially-Aware {{Parallel I}}/{{O}} for {{Particle Data}}},
	booktitle = {Proceedings of the 48th {{International Conference}} on {{Parallel Processing}}  - {{ICPP}} 2019},
	author = {Kumar, Sidharth and Petruzza, Steve and Usher, Will and Pascucci, Valerio},
	year = {2019},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\4VUW4RNW\\Kumar et al. - 2019 - Spatially-aware Parallel IO for Particle Data.pdf}
}

@article{wu_fastbit_2009,
	title = {{{FastBit}}: Interactively Searching Massive Data},
	journal = {Journal of Physics: Conference Series},
	author = {Wu, K and Ahern, S and Bethel, E W and Chen, J and Childs, H and {Cormier-Michel}, E and Geddes, C and Gu, J and Hagen, H and Hamann, B and Koegler, W and Lauret, J and Meredith, J and Messmer, P and Otoo, E and Perevoztchikov, V and Poskanzer, A and {Prabhat} and R{\"u}bel, O and Shoshani, A and Sim, A and Stockinger, K and Weber, G and Zhang, W-M},
	year = {2009},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\8MUW68EH\\Wu et al. - 2009 - FastBit interactively searching massive data.pdf}
}

@inproceedings{buck_scihadoop_2011,
	title = {{{SciHadoop}}: Array-Based Query Processing in {{Hadoop}}},
	booktitle = {Proceedings of 2011 {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}} on - {{SC}} '11},
	author = {Buck, Joe B. and Watkins, Noah and LeFevre, Jeff and Ioannidou, Kleoni and Maltzahn, Carlos and Polyzotis, Neoklis and Brandt, Scott},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\IPXQANPZ\\Buck et al. - 2011 - SciHadoop array-based query processing in Hadoop.pdf}
}

@inproceedings{zhang_sciql_2013,
	title = {{{SciQL}}: Array Data Processing inside an {{RDBMS}}},
	booktitle = {Proceedings of the 2013 International Conference on {{Management}} of Data - {{SIGMOD}} '13},
	author = {Zhang, Ying and Kersten, Martin and Manegold, Stefan},
	year = {2013},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\RDAEK6YY\\Zhang et al. - 2013 - SciQL array data processing inside an RDBMS.pdf}
}

@inproceedings{kersten_sciql_2011,
	title = {{{SciQL}}, a Query Language for Science Applications},
	booktitle = {Proceedings of the {{EDBT}}/{{ICDT}} 2011 {{Workshop}} on {{Array Databases}} - {{AD}} '11},
	author = {Kersten, M. and Zhang, Y. and Ivanova, M. and Nes, N.},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\RPEWAR6M\\Kersten et al. - 2011 - SciQL, a query language for science applications.pdf}
}

@inproceedings{soroush_arraystore_2011,
	title = {{{ArrayStore}}: A Storage Manager for Complex Parallel Array Processing},
	booktitle = {Proceedings of the 2011 International Conference on {{Management}} of Data - {{SIGMOD}} '11},
	author = {Soroush, Emad and Balazinska, Magdalena and Wang, Daniel},
	year = {2011},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\E3P9TCG7\\Soroush et al. - 2011 - ArrayStore a storage manager for complex parallel.pdf}
}

@inproceedings{hunt_fast_2006,
	title = {Fast Kd-Tree {{Construction}} with an {{Adaptive Error}}-{{Bounded Heuristic}}},
	booktitle = {2006 {{IEEE Symposium}} on {{Interactive Ray Tracing}}},
	author = {Hunt, Warren and Mark, William and Stoll, Gordon},
	year = {2006},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\GK85VCCB\\Hunt et al. - 2006 - Fast kd-tree Construction with an Adaptive Error-B.pdf}
}

@article{choi_parallel_2010,
	title = {Parallel {{SAH}} K-{{D}} Tree Construction},
	author = {Choi, Byn and Komuravelli, Rakesh and Lu, Victor and Sung, Hyojin and Bocchino, Robert L and Adve, Sarita V and Hart, John C},
	year = {2010},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\FNHENMNZ\\Choi et al. - 2010 - Parallel SAH k-D tree construction.pdf}
}

@article{zellmann_binned_2015,
	title = {Binned K-d {{Tree Construction}} for {{Sparse Volume Data}} on {{Multi}}-{{Core}} and {{GPU Systems}}},
	author = {Zellmann, Stefan and Schulze, J{\"u}rgen P. and Lang, Ulrich},
	year = {2015},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\TJ6J8H56\\Zellmann - 2015 - Binned k -d Tree Construction for Sparse Volume Da.pdf}
}

@inproceedings{zellmann_rapid_2018,
	title = {Rapid K-d {{Tree Construction}} for {{Sparse Volume Data}}},
	booktitle = {Eurographics {{Symposium}} on {{Parallel Graphics}} and {{Visualization}}},
	author = {Zellmann, Stefan and Schulze, J{\"u}rgen P. and Lang, Ulrich},
	year = {2018},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\K7YRAGC5\\Zellmann et al. - Rapid k-d Tree Construction for Sparse Volume Data.pdf}
}

@article{zhou_real-time_2008,
	title = {Real-Time {{KD}}-Tree Construction on Graphics Hardware},
	journal = {ACM Transactions on Graphics},
	author = {Zhou, Kun and Hou, Qiming and Wang, Rui and Guo, Baining},
	year = {2008},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\2MYUII7V\\Zhou et al. - 2008 - Real-time KD-tree construction on graphics hardwar.pdf}
}

@article{patwary_panda_2016,
	title = {{{PANDA}}: {{Extreme Scale Parallel K}}-{{Nearest Neighbor}} on {{Distributed Architectures}}},
	shorttitle = {{{PANDA}}},
	author = {Patwary, Md Mostofa Ali and Satish, Nadathur Rajagopalan and Sundaram, Narayanan and Liu, Jialin and Sadowski, Peter and Racah, Evan and Byna, Suren and Tull, Craig and Bhimji, Wahid and Prabhat and Dubey, Pradeep},
	year = {2016},
	journal = {2016 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
}

@article{wald_faster_2005,
	title = {Faster Isosurface Ray Tracing Using Implicit {{KD}}-Trees},
	author = {Wald, Ingo and Friedrich, Heiko and Marmitt, Gerd and Slusallek, Philipp and Seidel, H.-P.},
	year = {2005},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\94GN9HDW\\Wald et al. - 2005 - Faster isosurface ray tracing using implicit KD-tr.pdf},
	journal = {IEEE Transactions on Visualization and Computer Graphics}
}

@INPROCEEDINGS{netcdf,
	author={ {Jianwei Li} and {Wei-keng Liao} and A. {Choudhary} and R. {Ross} and R. {Thakur} and W. {Gropp} and R. {Latham} and A. {Siegel} and B. {Gallagher} and M. {Zingale}},
	booktitle={SC '03: Proceedings of the 2003 ACM/IEEE Conference on Supercomputing},
	title={Parallel {netCDF}: A {High}-{Performance} {Scientific} {I}/{O} {Interface}},
	year={2003}
}

@misc{hdf-web,
	title = {{HDF5} {Home} {Page}},
	howpublished = {\url{http://www.hdfgroup.org/HDF5/}}
}

@misc{adios-web,
	title = {{ADIOS} {Home} {Page}},
	howpublished = {\url{https://www.olcf.ornl.gov/center-projects/adios/}}
}

@misc{lammps,
	key={{LAMMPS}},
	author={{Sandia National Laboratories}},
	title={{LAMMPS} {Molecular} {Dynamics} {Simulator}},
}

@article{plimpton95_lammps,
	title={Fast {Parallel} {Algorithms} for {Short}-{Range} {Molecular} {Dynamics}},
	author={Plimpton, Steve},
	journal={Journal of Computational Physics},
	year={1995},
}

@inproceedings{howison_h5hut_2010,
	title = {H5hut: {{A}} High-Performance {{I}}/{{O}} Library for Particle-Based Simulations},
	shorttitle = {H5hut},
	booktitle = {Cluster {{Computing Workshops}} and {{Posters}}, 2010 {{IEEE International Conference}} On},
	author = {Howison, Mark and Adelmann, Andreas and Bethel, E. Wes and Gsell, Achim and Oswald, Benedikt and {others}},
	year = {2010},
	file = {C:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\2FPGC4QF\\Howison et al. - 2010 - H5hut A high-performance IO library for particle.pdf}
}

@article{skillman_dark_2014,
	title = {Dark {{Sky Simulations}}: {{Early Data Release}}},
	shorttitle = {Dark {{Sky Simulations}}},
	journal = {arXiv:1407.2600},
	author = {Skillman, Samuel W. and Warren, Michael S. and Turk, Matthew J. and Wechsler, Risa H. and Holz, Daniel E. and Sutter, P. M.},
	year = {2014},
	file = {C:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\JWKIFRCH\\Skillman et al. - 2014 - Dark Sky Simulations Early Data Release.pdf}
}

@article{berzins_extending_2016,
	title = {Extending the {{Uintah Framework}} through the {{Petascale Modeling}} of {{Detonation}} in {{Arrays}} of {{High Explosive Devices}}},
	journal = {SIAM Journal on Scientific Computing},
	author = {Berzins, Martin and Beckvermit, Jacqueline and Harman, Todd and Bezdjian, Andrew and Humphrey, Alan and Meng, Qingyu and Schmidt, John and Wight, Charles},
	year = {2016},
}

@inproceedings{lofstead_adaptable_2009,
	title = {Adaptable, {{Metadata Rich IO Methods}} for {{Portable High Performance IO}}},
	booktitle = {Parallel \& {{Distributed Processing}}, 2009. {{IPDPS}} 2009. {{IEEE International Symposium}} On},
	author = {Lofstead, Jay and Zheng, Fang and Klasky, Scott and Schwan, Karsten},
	year = {2009},
	file = {C:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\Z3UH88MW\\Lofstead et al. - 2009 - Adaptable, Metadata Rich IO Methods for Portable H.pdf}
}

@inproceedings{vishwanath_topology-aware_2011,
	title = {Topology-Aware Data Movement and Staging for {{I}}/{{O}} Acceleration on {{Blue Gene}}/{{P}} Supercomputing Systems},
	booktitle = {Proceedings of 2011 {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
	author = {Vishwanath, Venkatram and Hereld, Mark and Morozov, Vitali and Papka, Michael E.},
	year = {2011},
	file = {C:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\5W9448VM\\Vishwanath et al. - 2011 - Topology-aware data movement and staging for IO a.pdf}
}


@inproceedings{le_muzic_illustrative_2014,
	title = {Illustrative Visualization of Molecular Reactions Using Omniscient Intelligence and Passive Agents},
	booktitle = {Computer {{Graphics Forum}}},
	author = {Le Muzic, Mathieu and Parulek, Julius and Stavrum, Anne-Kristin and Viola, Ivan},
	year = {2014},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\SP94CFUG\\Le Muzic et al. - 2014 - Illustrative visualization of molecular reactions .pdf}
}

@inproceedings{shan_ior_2008,
	author={H. Shan and K. Antypas and J. Shalf},
	booktitle={SC '08: Proceedings of the 2008 ACM/IEEE Conference on Supercomputing},
	title={Characterizing and predicting the {I/O} performance of {HPC} applications using a parameterized synthetic benchmark},
	year={2008},
	month={Nov},
}

@article{delrosario_improved_1993,
	author = {del Rosario, Juan Miguel and Bordawekar, Rajesh and Choudhary, Alok},
	title = {Improved Parallel {I/O} via a Two-phase Run-time Access Strategy},
	journal = {SIGARCH Comput. Archit. News},
	year = {1993},
	publisher = {ACM},
}

@inproceedings{thakur_romio_1999,
	author={R. Thakur and W. Gropp and E. Lusk},
	booktitle={Seventh Symposium on the Frontiers of Massively Parallel Computation},
	title={Data sieving and collective {I}/{O} in {ROMIO}},
	year={1999},
}

@inproceedings{patwary_bd-cats_2015,
	title = {{{BD}}-{{CATS}}: Big Data Clustering at Trillion Particle Scale},
	shorttitle = {{{BD}}-{{CATS}}},
	booktitle = {Proceedings of the {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}} on - {{SC}} '15},
	author = {Patwary, Md. Mostofa Ali and Dubey, Pradeep and Byna, Suren and Satish, Nadathur Rajagopalan and Sundaram, Narayanan and Luki{\'c}, Zarija and Roytershteyn, Vadim and Anderson, Michael J. and Yao, Yushu and {Prabhat}},
	year = {2015},
}

@article{friedman_kd_1977,
	author = {Friedman, Jerome H. and Bentley, Jon Louis and Finkel, Raphael Ari},
	title = {An Algorithm for Finding Best Matches in Logarithmic Expected Time},
	year = {1977},
	publisher = {Association for Computing Machinery},
	journal = {ACM Trans. Math. Softw.},
	pages = {209–226},
}

@inproceedings{chou_fastquery_2011,
	title = {{{FastQuery}}: {{A Parallel Indexing System}} for {{Scientific Data}}},
	shorttitle = {{{FastQuery}}},
	booktitle = {2011 {{IEEE International Conference}} on {{Cluster Computing}}},
	author = {Chou, Jerry and Wu, Kesheng and {Prabhat}},
	year = {2011},
	address = {{Austin, TX, USA}},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\2CEAAVTR\\Chou et al. - 2011 - FastQuery A Parallel Indexing System for Scientif.pdf}
}

@article{bentley_multidimensional_1975,
	title = {Multidimensional Binary Search Trees Used for Associative Searching},
	author = {Bentley, Jon Louis},
	year = {1975},
	journal = {Communications of the ACM}
}

@misc{slattery_cabana_2019,
	author       = {Stuart Slattery and
	Christoph Junghans and
	Damien Lebrun-Grandie and
	Guangye Chen and
	Aaron Scheinberg and
	Robert Bird and
	Cameron Smith},
	title        = {ECP-copa/{Cabana} 0.1.0},
	month        = feb,
	year         = 2019,
	doi          = {10.5281/zenodo.2558369},
	url          = {https://doi.org/10.5281/zenodo.2558369}
}

@misc{slattery_cabana_v2_2019,
	author       = {Stuart Slattery and
	Christoph Junghans and
	Damien Lebrun-Grandie and
	Rene Halver and
	Guangye Chen and
	Sam Reeve and
	Aaron Scheinberg and
	Cameron Smith and
	Robert Bird},
	title        = {ECP-copa/{Cabana}: {Cabana} {Version} 0.2.0},
	month        = mar,
	year         = 2019,
	doi          = {10.5281/zenodo.2591488},
	url          = {https://doi.org/10.5281/zenodo.2591488}
}

@misc{cabana-web,
	title = {{CoPA} {Cabana} {GitHub}},
	howpublished = {\url{https://github.com/ECP-copa/Cabana/}}
}

@article{ge2020development,
	title={Development of a {CPU/GPU} Portable Software Library for {Lagrangian-Eulerian} Simulations of Liquid Sprays},
	author={Ge, Wenjun and Sankaran, Ramanan and Chen, Jacqueline H},
	journal={International Journal of Multiphase Flow},
	pages={103293},
	year={2020}
}

@article{zhang2008material,
	title={Material point method applied to multiphase flows},
	author={Zhang, Duan Z and Zou, Qisu and VanderHeyden, W Brian and Ma, Xia},
	journal={Journal of Computational Physics},
	volume={227},
	number={6},
	pages={3159--3173},
	year={2008}
}


@incollection{ludascher_breaking_2008,
	title = {Breaking the {{Curse}} of {{Cardinality}} on {{Bitmap Indexes}}},
	booktitle = {Scientific and {{Statistical Database Management}}},
	author = {Wu, Kesheng and Stockinger, Kurt and Shoshani, Arie},
	editor = {Lud{\"a}scher, Bertram and Mamoulis, Nikos},
	year = {2008},
	address = {{Berlin, Heidelberg}},
	file = {C\:\\Users\\Will\\Google Drive\\Zotero Profile\\storage\\597U8PP6\\Wu et al. - 2008 - Breaking the Curse of Cardinality on Bitmap Indexe.pdf}
}

@book{abiteboul1995foundations,
  title={Foundations of databases: the logical level},
  author={Abiteboul, Serge and Hull, Richard and Vianu, Victor},
  year={1995},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}

@misc{silo,
	title = {Silo: {A} {Mesh} and {Field} {I}/{O} {Library} and {Scientific} {Database}},
	author = {{Lawrence Livermore National Laboratory}},
	url = {https://wci.llnl.gov/simulation/computer-codes/silo}
}

@misc{io500,
	title = {{Virtual} {Institute} for {I}/{O}},
	url={https://www.vi4io.org}
}


@INPROCEEDINGS{5362452,
	author={K. {Gao} and W. {Liao} and A. {Nisar} and A. {Choudhary} and R. {Ross} and R. {Latham}},
	booktitle={2009 International Conference on Parallel Processing}, 
	title={Using Subfiling to Improve Programming Flexibility and Performance of Parallel Shared-file I/O}, 
	year={2009},
	volume={},
	number={},
	pages={470-477},}

@inproceedings{10.1145/3337821.3337875,
	author = {Kumar, Sidharth and Petruzza, Steve and Usher, Will and Pascucci, Valerio},
	title = {Spatially-Aware Parallel I/O for Particle Data},
	year = {2019},
	isbn = {9781450362955},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3337821.3337875},
	doi = {10.1145/3337821.3337875},
	abstract = {Particle data are used across a diverse set of large scale simulations, for example, in cosmology, molecular dynamics and combustion. At scale these applications generate tremendous amounts of data, which is often saved in an unstructured format that does not preserve spatial locality; resulting in poor read performance for post-processing analysis and visualization tasks, which typically make spatial queries. In this work, we explore some of the challenges of large scale particle data management, and introduce new techniques to perform scalable, spatially-aware write and read operations. We propose an adaptive aggregation technique to improve the performance of data aggregation, for both uniform and non-uniform particle distributions. Furthermore, we enable efficient read operations by employing a level of detail re-ordering and a multi-resolution layout. Finally, we demonstrate the scalability of our techniques with experiments on large scale simulation workloads up to 256K cores on two different leadership supercomputers, Mira and Theta.},
	booktitle = {Proceedings of the 48th International Conference on Parallel Processing},
	articleno = {84},
	numpages = {10},
	location = {Kyoto, Japan},
	series = {ICPP 2019}
}
@INPROCEEDINGS{Sasnauskas:2011,
  author={R. {Sasnauskas} and O. S. {Dustmann} and B. L. {Kaminski} and K. {Wehrle} and C. {Weise} and S. {Kowalewski}},
  booktitle={2011 31st International Conference on Distributed Computing Systems}, 
  title={Scalable Symbolic Execution of Distributed Systems}, 
  year={2011},
  volume={},
  number={},
  pages={333-342},}
                  
@inproceedings{Stefan:2011,
author = {Bucur, Stefan and Ureche, Vlad and Zamfir, Cristian and Candea, George},
title = {Parallel Symbolic Execution for Automated Real-World Software Testing},
year = {2011},
isbn = {9781450306348},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1966445.1966463},
doi = {10.1145/1966445.1966463},
abstract = {This paper introduces Cloud9, a platform for automated testing of real-world software. Our main contribution is the scalable parallelization of symbolic execution on clusters of commodity hardware, to help cope with path explosion. Cloud9 provides a systematic interface for writing "symbolic tests" that concisely specify entire families of inputs and behaviors to be tested, thus improving testing productivity. Cloud9 can handle not only single-threaded programs but also multi-threaded and distributed systems. It includes a new symbolic environment model that is the first to support all major aspects of the POSIX interface, such as processes, threads, synchronization, networking, IPC, and file I/O. We show that Cloud9 can automatically test real systems, like memcached, Apache httpd, lighttpd, the Python interpreter, rsync, and curl. We show how Cloud9 can use existing test suites to generate new test cases that capture untested corner cases (e.g., network stream fragmentation). Cloud9 can also diagnose incomplete bug fixes by analyzing the difference between buggy paths before and after a patch.},
booktitle = {Proceedings of the Sixth Conference on Computer Systems},
pages = {183–198},
numpages = {16},
keywords = {parallel testing, reliability, testing in cloud, debugging, distributed testing, verification, automated testing, scalable testing, symbolic execution, testing tools},
location = {Salzburg, Austria},
series = {EuroSys '11}
}
                 
 @article{10.1145/1639949.1640108,
author = {Bravenboer, Martin and Smaragdakis, Yannis},
title = {Strictly Declarative Specification of Sophisticated Points-to Analyses},
year = {2009},
issue_date = {October 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {44},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1639949.1640108},
doi = {10.1145/1639949.1640108},
abstract = {We present the DOOP framework for points-to analysis of Java programs. DOOP builds on the idea of specifying pointer analysis algorithms declaratively, using Datalog: a logic-based language for defining (recursive) relations. We carry the declarative approach further than past work by describing the full end-to-end analysis in Datalog and optimizing aggressively using a novel technique specifically targeting highly recursive Datalog programs.As a result, DOOP achieves several benefits, including full order-of-magnitude improvements in runtime. We compare DOOP with Lhotak and Hendren's PADDLE, which defines the state of the art for context-sensitive analyses. For the exact same logical points-to definitions (and, consequently, identical precision) DOOP is more than 15x faster than PADDLE for a 1-call-site sensitive analysis of the DaCapo benchmarks, with lower but still substantial speedups for other important analyses. Additionally, DOOP scales to very precise analyses that are impossible with PADDLE and Whaley et al.'s bddbddb, directly addressing open problems in past literature. Finally, our implementation is modular and can be easily configured to analyses with a wide range of characteristics, largely due to its declarativeness.},
journal = {SIGPLAN Not.},
month = oct,
pages = {243–262},
numpages = {20},
keywords = {declarative, bdds, points-to analysis, datalog, DOOP}
}

@inproceedings{Smaragdakis:2010,
author = {Smaragdakis, Yannis and Bravenboer, Martin},
title = {Using Datalog for Fast and Easy Program Analysis},
year = {2010},
isbn = {9783642242052},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-642-24206-9_14},
doi = {10.1007/978-3-642-24206-9_14},
booktitle = {Proceedings of the First International Conference on Datalog Reloaded},
pages = {245–251},
numpages = {7},
location = {Oxford, UK},
series = {Datalog'10}
}
                  
@inproceedings{Aref:2015,
author = {Aref, Molham and ten Cate, Balder and Green, Todd J. and Kimelfeld, Benny and Olteanu, Dan and Pasalic, Emir and Veldhuizen, Todd L. and Washburn, Geoffrey},
title = {Design and Implementation of the LogicBlox System},
year = {2015},
isbn = {9781450327589},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2723372.2742796},
doi = {10.1145/2723372.2742796},
abstract = {The LogicBlox system aims to reduce the complexity of software development for modern applications which enhance and automate decision-making and enable their users to evolve their capabilities via a ``self-service'' model. Our perspective in this area is informed by over twenty years of experience building dozens of mission-critical enterprise applications that are in use by hundreds of large enterprises across industries such as retail, telecommunications, banking, and government. We designed and built LogicBlox to be the system we wished we had when developing those applications.In this paper, we discuss the design considerations behind the LogicBlox system and give an overview of its implementation, highlighting innovative aspects. These include: LogiQL, a unified and declarative language based on Datalog; the use of purely functional data structures; novel join processing strategies; advanced incremental maintenance and live programming facilities; a novel concurrency control scheme; and built-in support for prescriptive and predictive analytics.},
booktitle = {Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
pages = {1371–1382},
numpages = {12},
keywords = {logicblox, live programming, leapfrog triejoin, predictive analytics, incremental maintenance, transaction repair, datalog, logiql},
location = {Melbourne, Victoria, Australia},
series = {SIGMOD '15}
}
                  
@article{10.1145/2499370.2462191,
author = {Kastrinis, George and Smaragdakis, Yannis},
title = {Hybrid Context-Sensitivity for Points-to Analysis},
year = {2013},
issue_date = {June 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2499370.2462191},
doi = {10.1145/2499370.2462191},
abstract = {Context-sensitive points-to analysis is valuable for achieving high precision with good performance. The standard flavors of context-sensitivity are call-site-sensitivity (kCFA) and object-sensitivity. Combining both flavors of context-sensitivity increases precision but at an infeasibly high cost. We show that a selective combination of call-site- and object-sensitivity for Java points-to analysis is highly profitable. Namely, by keeping a combined context only when analyzing selected language features, we can closely approximate the precision of an analysis that keeps both contexts at all times. In terms of speed, the selective combination of both kinds of context not only vastly outperforms non-selective combinations but is also faster than a mere object-sensitive analysis. This result holds for a large array of analyses (e.g., 1-object-sensitive, 2-object-sensitive with a context-sensitive heap, type-sensitive) establishing a new set of performance/precision sweet spots.},
journal = {SIGPLAN Not.},
month = jun,
pages = {423–434},
numpages = {12},
keywords = {context-sensitivity, object-sensitivity, type-sensitivity, points-to analysis}
}

@article{wright1998polymorphic,
  title={Polymorphic splitting: An effective polyvariant flow analysis},
  author={Wright, Andrew K and Jagannathan, Suresh},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume={20},
  number={1},
  pages={166--207},
  year={1998},
  publisher={ACM New York, NY, USA}
}


@inproceedings{Kastrinis:2013,
author = {Kastrinis, George and Smaragdakis, Yannis},
title = {Hybrid Context-Sensitivity for Points-to Analysis},
year = {2013},
isbn = {9781450320146},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2491956.2462191},
doi = {10.1145/2491956.2462191},
abstract = {Context-sensitive points-to analysis is valuable for achieving high precision with good performance. The standard flavors of context-sensitivity are call-site-sensitivity (kCFA) and object-sensitivity. Combining both flavors of context-sensitivity increases precision but at an infeasibly high cost. We show that a selective combination of call-site- and object-sensitivity for Java points-to analysis is highly profitable. Namely, by keeping a combined context only when analyzing selected language features, we can closely approximate the precision of an analysis that keeps both contexts at all times. In terms of speed, the selective combination of both kinds of context not only vastly outperforms non-selective combinations but is also faster than a mere object-sensitive analysis. This result holds for a large array of analyses (e.g., 1-object-sensitive, 2-object-sensitive with a context-sensitive heap, type-sensitive) establishing a new set of performance/precision sweet spots.},
booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {423–434},
numpages = {12},
keywords = {points-to analysis, context-sensitivity, type-sensitivity, object-sensitivity},
location = {Seattle, Washington, USA},
series = {PLDI '13}
}
                  
@inproceedings{Aiken:2007,
author = {Aiken, Alex and Bugrara, Suhabe and Dillig, Isil and Dillig, Thomas and Hackett, Brian and Hawkins, Peter},
title = {An Overview of the Saturn Project},
year = {2007},
isbn = {9781595935953},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1251535.1251543},
doi = {10.1145/1251535.1251543},
abstract = {We present an overview of the Saturn program analysis system, including a rationale for three major design decisions: the use of function-at-a-time, or summary-based, analysis, the use of constraints, and the use of a logic programming language to express program analysis algorithms. We argue that the combination of summaries and constraints allows Saturn to achieve both great scalability and great precision, while the use of a logic programming language with constraints allows for succinct, high-level expression of program analyses.},
booktitle = {Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering},
pages = {43–48},
numpages = {6},
keywords = {verification, boolean satisfiability, program analysis},
location = {San Diego, California, USA},
series = {PASTE '07}
}
                  
@inproceedings{Dias:2019,
author = {Dias, Vinicius and Teixeira, Carlos H. C. and Guedes, Dorgival and Meira, Wagner and Parthasarathy, Srinivasan},
title = {Fractal: A General-Purpose Graph Pattern Mining System},
year = {2019},
isbn = {9781450356435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3299869.3319875},
doi = {10.1145/3299869.3319875},
booktitle = {Proceedings of the 2019 International Conference on Management of Data},
pages = {1357–1374},
numpages = {18},
keywords = {distributed systems, graph pattern mining},
location = {Amsterdam, Netherlands},
series = {SIGMOD '19}
}
                  
@INPROCEEDINGS{Shun:2015,
  author={J. {Shun} and K. {Tangwongsan}},
  booktitle={2015 IEEE 31st International Conference on Data Engineering}, 
  title={Multicore triangle computations without tuning},
  year={2015},
  volume={},
  number={},
  pages={149-160}
}
                  
@article{Abdul:2016,
author = {Quamar, Abdul and Deshpande, Amol and Lin, Jimmy},
title = {NScale: Neighborhood-Centric Large-Scale Graph Analytics in the Cloud},
year = {2016},
issue_date = {April 2016},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {25},
number = {2},
issn = {1066-8888},
url = {https://doi.org/10.1007/s00778-015-0405-2},
doi = {10.1007/s00778-015-0405-2},
journal = {The VLDB Journal},
month = apr,
pages = {125–150},
numpages = {26},
keywords = {Data co-location, Graph analytics, Subgraph extraction, Set bin packing, Egocentric analysis, Cloud computing, Social networks}
}
                  
@inproceedings{Teixeira:2015,
author = {Teixeira, Carlos H. C. and Fonseca, Alexandre J. and Serafini, Marco and Siganos, Georgos and Zaki, Mohammed J. and Aboulnaga, Ashraf},
title = {Arabesque: A System for Distributed Graph Mining},
year = {2015},
isbn = {9781450338349},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2815400.2815410},
doi = {10.1145/2815400.2815410},
abstract = {Distributed data processing platforms such as MapReduce and Pregel have substantially simplified the design and deployment of certain classes of distributed graph analytics algorithms. However, these platforms do not represent a good match for distributed graph mining problems, as for example finding frequent subgraphs in a graph. Given an input graph, these problems require exploring a very large number of subgraphs and finding patterns that match some "interestingness" criteria desired by the user. These algorithms are very important for areas such as social networks, semantic web, and bioinformatics.In this paper, we present Arabesque, the first distributed data processing platform for implementing graph mining algorithms. Arabesque automates the process of exploring a very large number of subgraphs. It defines a high-level filter-process computational model that simplifies the development of scalable graph mining algorithms: Arabesque explores subgraphs and passes them to the application, which must simply compute outputs and decide whether the subgraph should be further extended. We use Arabesque's API to produce distributed solutions to three fundamental graph mining problems: frequent subgraph mining, counting motifs, and finding cliques. Our implementations require a handful of lines of code, scale to trillions of subgraphs, and represent in some cases the first available distributed solutions.},
booktitle = {Proceedings of the 25th Symposium on Operating Systems Principles},
pages = {425–440},
numpages = {16},
location = {Monterey, California},
series = {SOSP '15}
}
                  
                  
@INPROCEEDINGS{Hu:2018,
  author={Y. {Hu} and H. {Liu} and H. H. {Huang}},
  booktitle={SC18: International Conference for High Performance Computing, Networking, Storage and Analysis}, 
  title={TriCore: Parallel Triangle Counting on GPUs}, 
  year={2018},
  volume={},
  number={},
  pages={171-182}
}                  

@article{Chen:2020,
author = {Chen, Xuhao and Dathathri, Roshan and Gill, Gurbinder and Pingali, Keshav},
title = {Pangolin: An Efficient and Flexible Graph Mining System on CPU and GPU},
year = {2020},
issue_date = {June 2020},
publisher = {VLDB Endowment},
volume = {13},
number = {10},
issn = {2150-8097},
url = {https://doi.org/10.14778/3389133.3389137},
doi = {10.14778/3389133.3389137},
journal = {Proc. VLDB Endow.},
month = apr,
pages = {1190–1205},
numpages = {16}
}
@inproceedings{Leskovec:2010,
author = {Leskovec, Jure and Huttenlocher, Daniel and Kleinberg, Jon},
title = {Predicting Positive and Negative Links in Online Social Networks},
year = {2010},
isbn = {9781605587998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1772690.1772756},
doi = {10.1145/1772690.1772756},
pages = {641–650},
numpages = {10},
keywords = {status theory, structural balance, negative edges, distrust, signed networks, trust, positive edges},
location = {Raleigh, North Carolina, USA},
series = {WWW '10}
}
@article{Gehrke:2003,
author = {Gehrke, Johannes and Ginsparg, Paul and Kleinberg, Jon},
title = {Overview of the 2003 KDD Cup},
year = {2003},
issue_date = {December 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {2},
issn = {1931-0145},
url = {https://doi.org/10.1145/980972.980992},
doi = {10.1145/980972.980992},
abstract = {This paper surveys the 2003 KDD Cup, a competition held in conjunction with the Ninth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD) in August 2003. The competition focused on mining the complex real-life social network inherent in the e-print arXiv (arXiv.org). We describe the four KDD Cup tasks: citation prediction, download prediction, data cleaning, and an open task.},
journal = {SIGKDD Explor. Newsl.},
month = dec,
pages = {149–151},
numpages = {3}
}

@article{van1976semantics,
  title={The semantics of predicate logic as a programming language},
  author={Van Emden, Maarten H and Kowalski, Robert A},
  journal={Journal of the ACM (JACM)},
  volume={23},
  number={4},
  pages={733--742},
  year={1976},
  publisher={ACM New York, NY, USA}
}

@book{appel2007compiling,
  title={Compiling with continuations},
  author={Appel, Andrew W},
  year={2007},
  publisher={Cambridge university press}
}

@article{flix-madsen2016,
  title={From datalog to flix: A declarative language for fixed points on lattices},
  author={Madsen, Magnus and Yee, Ming-Ho and Lhot{\'a}k, Ond{\v{r}}ej},
  journal={ACM SIGPLAN Notices},
  volume={51},
  number={6},
  pages={194--208},
  year={2016},
  publisher={ACM New York, NY, USA}
}

@article{symbolic-king1976,
  title={Symbolic execution and program testing},
  author={King, James C},
  journal={Communications of the ACM},
  volume={19},
  number={7},
  pages={385--394},
  year={1976},
  publisher={ACM New York, NY, USA}
}
@inproceedings{nanopass,
author = {Keep, Andrew W. and Dybvig, R. Kent},
title = {A Nanopass Framework for Commercial Compiler Development},
year = {2013},
isbn = {9781450323260},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2500365.2500618},
doi = {10.1145/2500365.2500618},
booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
pages = {343–350},
numpages = {8},
keywords = {scheme, nanopass, compiler},
location = {Boston, Massachusetts, USA},
series = {ICFP '13}
}

@article{thiruvathukal2019benchmarking,
  title={A benchmarking study to evaluate apache spark on large-scale supercomputers},
  author={Thiruvathukal, George K and Christensen, Cameron and Jin, Xiaoyong and Tessier, Fran{\c{c}}ois and Vishwanath, Venkatram},
  journal={arXiv preprint arXiv:1904.11812},
  year={2019}
}
                  
@misc{soufflesips,
  title = {Souffl\'e --- Tuning (Sideways Information-Passing Strategy)},
  author={Souffle Team},
  howpublished = {\url{https://souffle-lang.github.io/tuning\#sideways-information-passing-strategy}},
  note = {Accessed: 2021-11-19}
}
                  
@misc{mseries,
  title = {Azure --- M-series},
  author={Microsoft},
  howpublished = {\url{https://docs.microsoft.com/en-us/azure/virtual-machines/m-series}},
  note = {Accessed: 2021-11-19}
}

@article{ceri1989you-datalog,
  title={What you always wanted to know about Datalog(and never dared to ask)},
  author={Ceri, Stefano and Gottlob, Georg and Tanca, Letizia and others},
  journal={IEEE transactions on knowledge and data engineering},
  volume={1},
  number={1},
  pages={146--166},
  year={1989}
}
                  
@inproceedings{bigdl,
author = {Shkapsky, Alexander and Yang, Mohan and Interlandi, Matteo and Chiu, Hsuan and Condie, Tyson and Zaniolo, Carlo},
title = {Big Data Analytics with Datalog Queries on Spark},
year = {2016},
isbn = {9781450335317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2882903.2915229},
doi = {10.1145/2882903.2915229},
booktitle = {Proceedings of the 2016 International Conference on Management of Data},
pages = {1135–1149},
numpages = {15},
keywords = {spark, monotonic aggregates, recursive queries, datalog},
location = {San Francisco, California, USA},
series = {SIGMOD '16}
}

@inproceedings{rasql,
author = {Gu, Jiaqi and Watanabe, Yugo H. and Mazza, William A. and Shkapsky, Alexander and Yang, Mohan and Ding, Ling and Zaniolo, Carlo},
title = {RaSQL: Greater Power and Performance for Big Data Analytics with Recursive-Aggregate-SQL on Spark},
year = {2019},
isbn = {9781450356435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3299869.3324959},
doi = {10.1145/3299869.3324959},
booktitle = {Proceedings of the 2019 International Conference on Management of Data},
pages = {467–484},
numpages = {18},
keywords = {declarative algorithms in sql, recursive query, distributed computation, aggregates in recursion},
location = {Amsterdam, Netherlands},
series = {SIGMOD '19}
}
                  
@InProceedings{loadbalancingra,
author="Kumar, Sidharth
and Gilray, Thomas",
editor="Sadayappan, Ponnuswamy
and Chamberlain, Bradford L.
and Juckeland, Guido
and Ltaief, Hatem",
title="Load-Balancing Parallel Relational Algebra",
booktitle="High Performance Computing",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="288--308",
isbn="978-3-030-50743-5"
}
                  
@inproceedings{fan:2022,
author = {Fan, Ke and Gilray, Thomas and Pascucci, Valerio and Huang, Xuan and Micinski, Kristopher and Kumar, Sidharth},
title = {Optimizing the Bruck Algorithm for Non-Uniform All-to-All Communication},
year = {2022},
isbn = {9781450391993},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502181.3531468},
doi = {10.1145/3502181.3531468},
abstract = {In MPI, collective routines MPI_Alltoall and MPI_Alltoallv play an important role in facilitating all-to-all inter-process data exchange. MPI_Alltoallv is a generalization of MPI_Alltoall, supporting the exchange of non-uniform distributions of data. Popular implementations of MPI, such as MPICH and OpenMPI, implement MPI_Alltoall using a combination of techniques such as the Spread-out algorithm and the Bruck algorithm. Spread-out has a linear complexity in P, compared to Bruck's logarithmic complexity (P: process count); a selection between these two techniques is made at runtime based on the data block size. However, MPI_Alltoallv is typically implemented using only variants of the spread-out algorithm, and therefore misses out on the performance benefits that the log-time Bruck algorithm offers (especially for smaller data loads).In this paper, we first implement and empirically evaluate all existing variants of the Bruck algorithm for uniform and non-uniform data loads-this forms the basis for our own Bruck-based non-uniform all-to-all algorithms. In particular, we developed two open-source implementations, padded Bruck and two-phase Bruck, that efficiently generalize Bruck algorithm to non-uniform all-to-all data exchange. We empirically validate the techniques on three supercomputers: Theta, Cori, and Stampede, using both microbenchmarks and two real-world applications: graph mining and program analysis. We perform weak and strong scaling studies for a range of average message sizes, degrees of imbalance, and distribution schemes, and demonstrate that our techniques outperform vendor-optimized Cray's MPI_Alltoallv by as much as 50% for some workloads and scales.},
booktitle = {Proceedings of the 31st International Symposium on High-Performance Parallel and Distributed Computing},
pages = {172–184},
numpages = {13},
keywords = {mpi, bruck algorithm, collective communication, alltoallv},
location = {Minneapolis, MN, USA},
series = {HPDC '22}
}

                  
@INPROCEEDINGS{hipc,
  author={Gilray, Thomas and Kumar, Sidharth},
  booktitle={2019 IEEE 26th International Conference on High Performance Computing, Data, and Analytics (HiPC)}, 
  title={Distributed Relational Algebra at Scale}, 
  year={2019},
  volume={},
  number={},
  pages={12-22},
  doi={10.1109/HiPC.2019.00014}}
                  
@inproceedings{cc,
author = {Gilray, Thomas and Kumar, Sidharth and Micinski, Kristopher},
title = {Compiling Data-Parallel Datalog},
year = {2021},
isbn = {9781450383257},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446804.3446855},
doi = {10.1145/3446804.3446855},
booktitle = {Proceedings of the 30th ACM SIGPLAN International Conference on Compiler Construction},
pages = {23–35},
numpages = {13},
keywords = {Logic, Datalog, Relational Algebra, Parallelism},
location = {Virtual, Republic of Korea},
series = {CC 2021}
}
@techreport{parker2017early,
  title={Early Evaluation of the Cray XC40 Xeon Phi System ‘Theta’at Argonne},
  author={Parker, Scott and Morozov, Vitali and Chunduri, Sudheer and Harms, Kevin and Knight, Chris and Kumaran, Kalyan},
  year={2017},
  institution={Argonne National Lab.(ANL), Argonne, IL (United States)}
}

@article{tarski1955lattice,
  title={A lattice-theoretical fixpoint theorem and its applications.},
  author={Tarski, Alfred},
  journal={Pacific journal of Mathematics},
  volume={5},
  number={2},
  pages={285--309},
  year={1955},
  publisher={Pacific Journal of Mathematics, A Non-profit Corporation}
}

@inproceedings{whaley2005using,
  title={Using Datalog with binary decision diagrams for program analysis},
  author={Whaley, John and Avots, Dzintars and Carbin, Michael and Lam, Monica S},
  booktitle={Asian Symposium on Programming Languages and Systems},
  pages={97--118},
  year={2005},
  organization={Springer}
}
@book{atapl,
author = {Pierce, Benjamin C.},
title = {Advanced Topics in Types and Programming Languages},
year = {2004},
isbn = {0262162288},
publisher = {The MIT Press}
}

@book{tapl,
author = {Pierce, Benjamin C.},
title = {Types and Programming Languages},
year = {2002},
isbn = {0262162091},
publisher = {The MIT Press},
edition = {1st},
abstract = {A type system is a syntactic method for automatically checking the absence of certain erroneous behaviors by classifying program phrases according to the kinds of values they compute. The study of type systems -- and of programming languages from a type-theoretic perspective -- has important applications in software engineering, language design, high-performance compilers, and security.This text provides a comprehensive introduction both to type systems in computer science and to the basic theory of programming languages. The approach is pragmatic and operational; each new concept is motivated by programming examples and the more theoretical sections are driven by the needs of implementations. Each chapter is accompanied by numerous exercises and solutions, as well as a running implementation, available via the Web. Dependencies between chapters are explicitly identified, allowing readers to choose a variety of paths through the material.The core topics include the untyped lambda-calculus, simple type systems, type reconstruction, universal and existential polymorphism, subtyping, bounded quantification, recursive types, kinds, and type operators. Extended case studies develop a variety of approaches to modeling the features of object-oriented languages.}
}

@article{Curry:1934,
 ISSN = {00278424},
 URL = {http://www.jstor.org/stable/86796},
 author = {H. B. Curry},
 journal = {Proceedings of the National Academy of Sciences of the United States of America},
 number = {11},
 pages = {584--590},
 publisher = {National Academy of Sciences},
 title = {Functionality in Combinatory Logic},
 urldate = {2022-07-06},
 volume = {20},
 year = {1934}
}

@article{Harper:93,
author = {Harper, Robert and Honsell, Furio and Plotkin, Gordon},
title = {A Framework for Defining Logics},
year = {1993},
issue_date = {Jan. 1993},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/138027.138060},
doi = {10.1145/138027.138060},
journal = {J. ACM},
month = {jan},
pages = {143–184},
numpages = {42},
keywords = {typed lambda calculus, proof checking, interactive theorem proving, formal systems}
}
                  
@article{harper:2007,
title={Mechanizing metatheory in a logical framework},
volume={17},
DOI={10.1017/S0956796807006430},
number={4-5},
journal={Journal of Functional Programming},
publisher={Cambridge University Press},
author={Harper, Robert and Licata, Daniel R.},
year={2007},
pages={613–673}
}
@techreport{pfenning1998twelf,
  title={Twelf user’s guide},
  author={Pfenning, Frank and Schuermann, Carsten},
  year={1998},
  institution={version 1.2. Technical Report CMU-CS-98-173, Carnegie Mellon University}
}

@inproceedings{fan2022optimizing,
  title={Optimizing the Bruck Algorithm for Non-uniform All-to-all Communication},
  author={Fan, Ke and Gilray, Thomas and Pascucci, Valerio and Huang, Xuan and Micinski, Kristopher and Kumar, Sidharth},
  booktitle={Proceedings of the 31st International Symposium on High-Performance Parallel and Distributed Computing},
  pages={172--184},
  year={2022}
}

@inproceedings{scott1991efficient,
	title={Efficient all-to-all communication patterns in hypercube and mesh topologies},
	author={Scott, David S},
	booktitle={The Sixth Distributed Memory Computing Conference, 1991. Proceedings},
	pages={398--399},
	year={1991},
	organization={IEEE Computer Society}
}

@article{thakur2005optimization,
	title={Optimization of collective communication operations in MPICH},
	author={Thakur, Rajeev and Rabenseifner, Rolf and Gropp, William},
	journal={The International Journal of High Performance Computing Applications},
	volume={19},
	number={1},
	pages={49--66},
	year={2005},
	publisher={Sage Publications Sage CA: Thousand Oaks, CA}
}

@inproceedings{traff2014implementing,
  title={Implementing a classic: Zero-copy all-to-all communication with MPI datatypes},
  author={Tr{\"a}ff, Jesper Larsson and Rougier, Antoine and Hunold, Sascha},
  booktitle={Proceedings of the 28th ACM international conference on Supercomputing},
  pages={135--144},
  year={2014}
}

@article{bruck1997efficient,
  title={Efficient algorithms for all-to-all communications in multiport message-passing systems},
  author={Bruck, Jehoshua and Ho, Ching-Tien and Kipnis, Shlomo and Upfal, Eli and Weathersby, Derrick},
  journal={IEEE Transactions on parallel and distributed systems},
  volume={8},
  number={11},
  pages={1143--1156},
  year={1997},
  publisher={IEEE}
}
@inproceedings{Keller:2010,
author = {Keller, Chantal and Altenkirch, Thorsten},
title = {Hereditary Substitutions for Simple Types, Formalized},
year = {2010},
isbn = {9781450302555},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1863597.1863601},
doi = {10.1145/1863597.1863601},
abstract = {We analyze a normalization function for the simply typed λ-calculus based on hereditary substitutions, a technique developed by Pfenning et al. The normalizer is implemented in Agda, a total language where all programs terminate. It requires no termination proof since it is structurally recursive which is recognized by Agda's termination checker. Using Agda as an interactive theorem prover we establish that our normalization function precisely identifies Βη-equivalent terms and hence can be used to decide Βη-equality. An interesting feature of this approach is that it is clear from the construction that Βη-equality is primitive recursive.},
booktitle = {Proceedings of the Third ACM SIGPLAN Workshop on Mathematically Structured Functional Programming},
pages = {3–10},
numpages = {8},
keywords = {normalizer, type theory, decidability of Βη-equality, hereditary substitutions},
location = {Baltimore, Maryland, USA},
series = {MSFP '10}
}

@article{Dunfield:2021,
author = {Dunfield, Jana and Krishnaswami, Neel},
title = {Bidirectional Typing},
year = {2021},
issue_date = {June 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {5},
issn = {0360-0300},
url = {https://doi.org/10.1145/3450952},
doi = {10.1145/3450952},
abstract = {Bidirectional typing combines two modes of typing: type checking, which checks that a program satisfies a known type, and type synthesis, which determines a type from the program. Using checking enables bidirectional typing to support features for which inference is undecidable; using synthesis enables bidirectional typing to avoid the large annotation burden of explicitly typed languages. In addition, bidirectional typing improves error locality. We highlight the design principles that underlie bidirectional type systems, survey the development of bidirectional typing from the prehistoric period before Pierce and Turner’s local type inference to the present day, and provide guidance for future investigations.},
journal = {ACM Comput. Surv.},
month = {may},
articleno = {98},
numpages = {38},
keywords = {Type checking, type inference}
}

@inproceedings{Rondon:2008,
author = {Rondon, Patrick M. and Kawaguci, Ming and Jhala, Ranjit},
title = {Liquid Types},
year = {2008},
isbn = {9781595938602},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1375581.1375602},
doi = {10.1145/1375581.1375602},
abstract = {We present Logically Qualified Data Types, abbreviated to Liquid Types, a system that combines Hindley-Milner type inference with Predicate Abstraction to automatically infer dependent types precise enough to prove a variety of safety properties. Liquid types allow programmers to reap many of the benefits of dependent types, namely static verification of critical properties and the elimination of expensive run-time checks, without the heavy price of manual annotation. We have implemented liquid type inference in DSOLVE, which takes as input an OCAML program and a set of logical qualifiers and infers dependent types for the expressions in the OCAML program. To demonstrate the utility of our approach, we describe experiments using DSOLVE to statically verify the safety of array accesses on a set of OCAML benchmarks that were previously annotated with dependent types as part of the DML project. We show that when used in conjunction with a fixed set of array bounds checking qualifiers, DSOLVE reduces the amount of manual annotation required for proving safety from 31% of program text to under 1%.},
booktitle = {Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {159–169},
numpages = {11},
keywords = {dependent types, hindley-milner, predicate abstraction, type inference},
location = {Tucson, AZ, USA},
series = {PLDI '08}
}
@inproceedings{Freeman:1991,
author = {Freeman, Tim and Pfenning, Frank},
title = {Refinement Types for ML},
year = {1991},
isbn = {0897914287},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/113445.113468},
doi = {10.1145/113445.113468},
booktitle = {Proceedings of the ACM SIGPLAN 1991 Conference on Programming Language Design and Implementation},
pages = {268–277},
numpages = {10},
location = {Toronto, Ontario, Canada},
series = {PLDI '91}
}
                  
@phdthesis{Davies:2005,
author = {Davies, Rowan and Pfenning, Frank},
title = {Practical Refinement-Type Checking},
year = {2005},
isbn = {0542045877},
publisher = {Carnegie Mellon University},
school = {Carnegie Mellon University},
address = {USA},
note = {AAI3168521}
}
@article{Pierce:2000,
author = {Pierce, Benjamin C. and Turner, David N.},
title = {Local Type Inference},
year = {2000},
issue_date = {Jan. 2000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {1},
issn = {0164-0925},
url = {https://doi.org/10.1145/345099.345100},
doi = {10.1145/345099.345100},
abstract = {We study two partial type inference methods for a language combining subtyping and impredicative polymorphism. Both methods are local in the sense that missing annotations are recovered using only information from adjacent nodes in the syntax tree, without long-distance constraints such as unification variables. One method infers type arguments in polymorphic applications using a local constraint solver. The other infers annotations on bound variables in function abstractions by propagating type constraints downward from enclosing application nodes. We motivate our design choices by a statistical analysis of the uses of type inference in a sizable body of existing ML code.},
journal = {ACM Trans. Program. Lang. Syst.},
month = {jan},
pages = {1–44},
numpages = {44},
keywords = {type inference, subtyping, polymorphism}
}
@INPROCEEDINGS{Denney98refinementtypes,
    author = {E. Denney},
    title = {Refinement Types for Specification},
    booktitle = {IFIP Working Conference on Programming Concepts and Methods (PROCOMET ’98), Shelter Island},
    year = {1998},
    pages = {148--166},
    publisher = {Chapman and Hall}
}

@inproceedings{Vazou:2018,
author = {Vazou, Niki and Breitner, Joachim and Kunkel, Rose and Van Horn, David and Hutton, Graham},
title = {Theorem Proving for All: Equational Reasoning in Liquid Haskell (Functional Pearl)},
year = {2018},
isbn = {9781450358354},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3242744.3242756},
doi = {10.1145/3242744.3242756},
abstract = {Equational reasoning is one of the key features of pure functional languages such as Haskell. To date, however, such reasoning always took place externally to Haskell, either manually on paper, or mechanised in a theorem prover. This article shows how equational reasoning can be performed directly and seamlessly within Haskell itself, and be checked using Liquid Haskell. In particular, language learners --- to whom external theorem provers are out of reach --- can benefit from having their proofs mechanically checked. Concretely, we show how the equational proofs and derivations from Graham's textbook can be recast as proofs in Haskell (spoiler: they look essentially the same).},
booktitle = {Proceedings of the 11th ACM SIGPLAN International Symposium on Haskell},
pages = {132–144},
numpages = {13},
keywords = {Haskell, theorem proving, equational reasoning, program optimization, Liquid Haskell},
location = {St. Louis, MO, USA},
series = {Haskell 2018}
}
@book{barendregt2013lambda,
  title={Lambda Calculus with Types},
  author={Barendregt, H. and Dekkers, W. and Statman, R. and Association for Symbolic Logic},
  isbn={9780521766142},
  lccn={2013444003},
  series={Lambda Calculus with Types},
  url={https://books.google.com/books?id=2UVasvrhXl8C},
  year={2013},
  publisher={Cambridge University Press}
}
                  
@article{Curry1959-CURCLV,
	volume = {68},
	title = {Combinatory Logic, Volume I},
	number = {4},
	pages = {548--550},
	author = {Haskell B. Curry and Robert Feys and William Craig},
	publisher = {Duke University Press},
	year = {1959},
	doi = {10.2307/2182503},
	journal = {Philosophical Review}
}
@article{howard1980formulae,
  title={The formulae-as-types notion of construction},
  author={Howard, William A},
  journal={To HB Curry: essays on combinatory logic, lambda calculus and formalism},
  volume={44},
  pages={479--490},
  year={1980}
}

@article{Xie:2007,
author = {Xie, Yichen and Aiken, Alex},
title = {Saturn: A Scalable Framework for Error Detection Using Boolean Satisfiability},
year = {2007},
issue_date = {May 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/1232420.1232423},
doi = {10.1145/1232420.1232423},
journal = {ACM Trans. Program. Lang. Syst.},
month = {may},
pages = {16–es},
numpages = {43},
keywords = {Boolean satisfiability, Program analysis, error detection}
}
                  
@inproceedings{Xiaozhu:2021,
author = {Meng, Xiaozhu and Anderson, Jonathon M. and Mellor-Crummey, John and Krentel, Mark W. and Miller, Barton P. and Milakovi\'{c}, Srundefinedan},
title = {Parallel Binary Code Analysis},
year = {2021},
isbn = {9781450382946},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3437801.3441604},
doi = {10.1145/3437801.3441604},
booktitle = {Proceedings of the 26th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
pages = {76–89},
numpages = {14},
keywords = {control flow graph construction, operation dependencies and properties, performance analysis},
location = {Virtual Event, Republic of Korea},
series = {PPoPP '21}
}
@inproceedings{Whaley:2005,
author = {Whaley, John and Avots, Dzintars and Carbin, Michael and Lam, Monica S.},
title = {Using Datalog with Binary Decision Diagrams for Program Analysis},
year = {2005},
isbn = {3540297359},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/11575467_8},
doi = {10.1007/11575467_8},
abstract = {Many problems in program analysis can be expressed naturally and concisely in a declarative language like Datalog. This makes it easy to specify new analyses or extend or compose existing analyses. However, previous implementations of declarative languages perform poorly compared with traditional implementations. This paper describes bddbddb, a BDD-Based Deductive DataBase, which implements the declarative language Datalog with stratified negation, totally-ordered finite domains and comparison operators. bddbddb uses binary decision diagrams (BDDs) to efficiently represent large relations. BDD operations take time proportional to the size of the data structure, not the number of tuples in a relation, which leads to fast execution times. bddbddb is an effective tool for implementing a large class of program analyses. We show that a context-insensitive points-to analysis implemented with bddbddb is about twice as fast as a carefully hand-tuned version. The use of BDDs also allows us to solve heretofore unsolved problems, like context-sensitive pointer analysis for large programs.},
booktitle = {Proceedings of the Third Asian Conference on Programming Languages and Systems},
pages = {97–118},
numpages = {22},
location = {Tsukuba, Japan},
series = {APLAS'05}
}
@inproceedings{Prabhu:2011,
author = {Prabhu, Tarun and Ramalingam, Shreyas and Might, Matthew and Hall, Mary},
title = {EigenCFA: Accelerating Flow Analysis with GPUs},
year = {2011},
isbn = {9781450304900},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1926385.1926445},
doi = {10.1145/1926385.1926445},
booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {511–522},
numpages = {12},
keywords = {cps, gpu, matrix, eigencfa, abstract interpretation, lambda calculus, program analysis, flow analysis},
location = {Austin, Texas, USA},
series = {POPL '11}
}
                  
@ARTICLE{Kramer:1994,
  author={Kramer, R. and Gupta, R. and Soffa, M.L.},
  journal={IEEE Transactions on Parallel and Distributed Systems}, 
  title={The combining DAG: a technique for parallel data flow analysis}, 
  year={1994},
  volume={5},
  number={8},
  pages={805-813},
  doi={10.1109/71.298205}}
                  
@inproceedings{Lee:90,
author = {Lee, Yong-fong and Marlowe, Thomas J. and Ryder, Barbara G.},
title = {Performing Data Flow Analysis in Parallel},
year = {1990},
isbn = {0897914120},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
abstract = {We have designed a family of parallel data flow analysis algorithms for execution on a message-passing MIMD architecture, based on general-purpose, hybrid data flow analysis algorithms [22]. We have exploited the natural task partitioning of the hybrid algorithms and have explored a static mapping-dynamic scheduling strategy. Alternative mapping-scheduling choices and refinements of the flow graph condensation utilized are discussed. Our parallel hybrid algorithm family is illustrated on the Reaching Definitions problem, although parallel algorithms also exist for many interprocedural (e.g., Aliasing) and intraprocedural (e.g., Available Expressions) problems [20].},
booktitle = {Proceedings of the 1990 ACM/IEEE Conference on Supercomputing},
pages = {942–951},
numpages = {10},
location = {New York, New York, USA},
series = {Supercomputing '90}
}
                  
@inproceedings{Marlowe:1989,
author = {Marlowe, Thomas J. and Ryder, Barbara G.},
title = {An Efficient Hybrid Algorithm for Incremental Data Flow Analysis},
year = {1989},
isbn = {0897913434},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/96709.96728},
doi = {10.1145/96709.96728},
abstract = {Our exhaustive and incremental hybrid data flow analysis algorithms, based on iteration and elimination techniques, are designed for incremental update of a wide variety of monotone data flow problems in response to source program changes. Unlike previous incremental iterative methods, this incremental algorithm efficiently computes precise and correct solutions. We give theoretical results on the imprecision of restarting iteration for incremental update by fixed point iteration which provided motivation for our algorithm design. Described intuitively, the main algorithm idea is to factor the data flow solution on strong connected components of the flow graph into local and external parts, solving for the local parts by iteration and propagating these effects on the condensation of the flow graph to obtain the entire data flow solution. The incremental hybrid algorithm re-performs those algorithm steps affected by the program changes.},
booktitle = {Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {184–196},
numpages = {13},
location = {San Francisco, California, USA},
series = {POPL '90}
}
@inproceedings{MendezLojo:2010,
author = {M\'{e}ndez-Lojo, Mario and Mathew, Augustine and Pingali, Keshav},
title = {Parallel Inclusion-Based Points-to Analysis},
year = {2010},
isbn = {9781450302036},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1869459.1869495},
doi = {10.1145/1869459.1869495},
abstract = {Inclusion-based points-to analysis provides a good trade-off between precision of results and speed of analysis, and it has been incorporated into several production compilers including gcc. There is an extensive literature on how to speed up this algorithm using heuristics such as detecting and collapsing cycles of pointer-equivalent variables. This paper describes a complementary approach based on exploiting parallelism. Our implementation exploits two key insights. First, we show that inclusion-based points-to analysis can be formulated entirely in terms of graphs and graph rewrite rules. This exposes the amorphous data-parallelism in this algorithm and makes it easier to develop a parallel implementation. Second, we show that this graph-theoretic formulation reveals certain key properties of the algorithm that can be exploited to obtain an efficient parallel implementation. Our parallel implementation achieves a scaling of up to 3x on a 8-core machine for a suite of ten large C programs. For all but the smallest benchmarks, the parallel analysis outperforms a state-of-the-art, highly optimized, serial implementation of the same algorithm. To the best of our knowledge, this is the first parallel implementation of a points-to analysis.},
booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
pages = {428–443},
numpages = {16},
keywords = {inclusion-based points-to analysis, amorphous data-parallelism, irregular programs, extensive transformers, synchronization overheads, galois system, binary decision diagrams},
location = {Reno/Tahoe, Nevada, USA},
series = {OOPSLA '10}
}
@inproceedings {ddisasm,
author = {Antonio Flores-Montoya and Eric Schulte},
title = {Datalog Disassembly},
booktitle = {29th USENIX Security Symposium (USENIX Security 20)},
year = {2020},
isbn = {978-1-939133-17-5},
pages = {1075--1092},
url = {https://www.usenix.org/conference/usenixsecurity20/presentation/flores-montoya},
publisher = {USENIX Association},
month = Aug
}
@inproceedings{Arntzenius:2016,
author = {Arntzenius, Michael and Krishnaswami, Neelakantan R.},
title = {Datafun: A Functional Datalog},
year = {2016},
isbn = {9781450342193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2951913.2951948},
doi = {10.1145/2951913.2951948},
abstract = {Datalog may be considered either an unusually powerful query language or a carefully limited logic programming language. Datalog is declarative, expressive, and optimizable, and has been applied successfully in a wide variety of problem domains. However, most use-cases require extending Datalog in an application-specific manner. In this paper we define Datafun, an analogue of Datalog supporting higher-order functional programming. The key idea is to track monotonicity with types.},
booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
pages = {214–227},
numpages = {14},
keywords = {type theory, denotational semantics, functional programming, operational semantics, adjoint logic, domain-specific languages, Datalog, logic programming, Prolog},
location = {Nara, Japan},
series = {ICFP 2016}
}
@article{Arntzenius:2019,
author = {Arntzenius, Michael and Krishnaswami, Neel},
title = {Semina\"{\i}ve Evaluation for a Higher-Order Functional Language},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371090},
doi = {10.1145/3371090},
abstract = {One of the workhorse techniques for implementing bottom-up Datalog engines is semina\"{\i}ve evaluation. This optimization improves the performance of Datalog's most distinctive feature: recursively defined predicates. These are computed iteratively, and under a na\"{\i}ve evaluation strategy, each iteration recomputes all previous values. Semina\"{\i}ve evaluation computes a safe approximation of the difference between iterations. This can asymptotically improve the performance of Datalog queries. Semina\"{\i}ve evaluation is defined partly as a program transformation and partly as a modified iteration strategy, and takes advantage of the first-order nature of Datalog code. This paper extends the semina\"{\i}ve transformation to higher-order programs written in the Datafun language, which extends Datalog with features like first-class relations, higher-order functions, and datatypes like sum types.},
journal = {Proc. ACM Program. Lang.},
month = {dec},
articleno = {22},
numpages = {28},
keywords = {functional languages, relational languages, incremental computation, Datafun, semina\"{\i}ve evaluation, Datalog}
}
                  
@InProceedings{Giarrusso:2019,
author="Giarrusso, Paolo G.
and R{\'e}gis-Gianas, Yann
and Schuster, Philipp",
editor="Caires, Lu{\'i}s",
title="Incremental $\lambda$-Calculus in Cache-Transfer Style",
booktitle="Programming Languages and Systems",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="553--580",
abstract="Incremental computation requires propagating changes and reusing intermediate results of base computations. Derivatives, as produced by static differentiation [7], propagate changes but do not reuse intermediate results, leading to wasteful recomputation. As a solution, we introduce conversion to Cache-Transfer-Style, an additional program transformations producing purely incremental functional programs that create and maintain nested tuples of intermediate results. To prove CTS conversion correct, we extend the correctness proof of static differentiation from STLC to untyped {\$}{\$}{\backslash}lambda {\$}{\$}-calculus via step-indexed logical relations, and prove sound the additional transformation via simulation theorems.",
isbn="978-3-030-17184-1"
}

@inproceedings{Yufei:2014,
author = {Cai, Yufei and Giarrusso, Paolo G. and Rendel, Tillmann and Ostermann, Klaus},
title = {A Theory of Changes for Higher-Order Languages: Incrementalizing $\lambda$-Calculi by Static Differentiation},
year = {2014},
isbn = {9781450327848},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2594291.2594304},
doi = {10.1145/2594291.2594304},
abstract = {If the result of an expensive computation is invalidated by a small change to the input, the old result should be updated incrementally instead of reexecuting the whole computation. We incrementalize programs through their derivative. A derivative maps changes in the program's input directly to changes in the program's output, without reexecuting the original program. We present a program transformation taking programs to their derivatives, which is fully static and automatic, supports first-class functions, and produces derivatives amenable to standard optimization.We prove the program transformation correct in Agda for a family of simply-typed λ-calculi, parameterized by base types and primitives. A precise interface specifies what is required to incrementalize the chosen primitives.We investigate performance by a case study: We implement in Scala the program transformation, a plugin and improve performance of a nontrivial program by orders of magnitude.},
booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {145–155},
numpages = {11},
keywords = {formalization, first-class functions, performance, incremental computation, Agda},
location = {Edinburgh, United Kingdom},
series = {PLDI '14}
}
@inproceedings{Sahebolamri:2022,
author = {Sahebolamri, Arash and Gilray, Thomas and Micinski, Kristopher},
title = {Seamless Deductive Inference via Macros},
year = {2022},
isbn = {9781450391832},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3497776.3517779},
doi = {10.1145/3497776.3517779},
booktitle = {Proceedings of the 31st ACM SIGPLAN International Conference on Compiler Construction},
pages = {77–88},
numpages = {12},
keywords = {Rust, Static Analysis, Datalog, Program Analysis, Logic Programming, Ascent},
location = {Seoul, South Korea},
series = {CC 2022}
}
                  
@inproceedings{Emina:2013,
author = {Torlak, Emina and Bodik, Rastislav},
title = {Growing Solver-Aided Languages with Rosette},
year = {2013},
isbn = {9781450324724},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2509578.2509586},
doi = {10.1145/2509578.2509586},
abstract = {SAT and SMT solvers have automated a spectrum of programming tasks, including program synthesis, code checking, bug localization, program repair, and programming with oracles. In principle, we obtain all these benefits by translating the program (once) to a constraint system understood by the solver. In practice, however, compiling a language to logical formulas is a tricky process, complicated by having to map the solution back to the program level and extend the language with new solver-aided constructs, such as symbolic holes used in synthesis.This paper introduces ROSETTE, a framework for designing solver-aided languages. ROSETTE is realized as a solver-aided language embedded in Racket, from which it inherits extensive support for meta-programming. Our framework frees designers from having to compile their languages to constraints: new languages, and their solver-aided constructs, are defined by shallow (library-based) or deep (interpreter-based) embedding in ROSETTE itself.We describe three case studies, by ourselves and others, of using ROSETTE to implement languages and synthesizers for web scraping, spatial programming, and superoptimization of bitvector programs.},
booktitle = {Proceedings of the 2013 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
pages = {135–152},
numpages = {18},
keywords = {solver-aided languages},
location = {Indianapolis, Indiana, USA},
series = {Onward! 2013}
}
                  
@inproceedings{Madsen:2018,
author = {Madsen, Magnus and Lhot\'{a}k, Ond\v{r}ej},
title = {Safe and Sound Program Analysis with Flix},
year = {2018},
isbn = {9781450356992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3213846.3213847},
doi = {10.1145/3213846.3213847},
booktitle = {Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {38–48},
numpages = {11},
keywords = {monotonicity, lattices, soundness, safety, static analysis},
location = {Amsterdam, Netherlands},
series = {ISSTA 2018}
}
                  
@inproceedings{Smaragdakis:2011,
author = {Smaragdakis, Yannis and Bravenboer, Martin and Lhot\'{a}k, Ondrej},
title = {Pick Your Contexts Well: Understanding Object-Sensitivity},
year = {2011},
isbn = {9781450304900},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1926385.1926390},
doi = {10.1145/1926385.1926390},
abstract = {Object-sensitivity has emerged as an excellent context abstraction for points-to analysis in object-oriented languages. Despite its practical success, however, object-sensitivity is poorly understood. For instance, for a context depth of 2 or higher, past scalable implementations deviate significantly from the original definition of an object-sensitive analysis. The reason is that the analysis has many degrees of freedom, relating to which context elements are picked at every method call and object creation. We offer a clean model for the analysis design space, and discuss a formal and informal understanding of object-sensitivity and of how to create good object-sensitive analyses. The results are surprising in their extent. We find that past implementations have made a sub-optimal choice of contexts, to the severe detriment of precision and performance. We define a "full-object-sensitive" analysis that results in significantly higher precision, and often performance, for the exact same context depth. We also introduce "type-sensitivity" as an explicit approximation of object-sensitivity that preserves high context quality at substantially reduced cost. A type-sensitive points-to analysis makes an unconventional use of types as context: the context types are not dynamic types of objects involved in the analysis, but instead upper bounds on the dynamic types of their allocator objects. Our results expose the influence of context choice on the quality of points-to analysis and demonstrate type-sensitivity to be an idea with major impact: It decisively advances the state-of-the-art with a spectrum of analyses that simultaneously enjoy speed (several times faster than an analogous object-sensitive analysis), scalability (comparable to analyses with much less context-sensitivity), and precision (comparable to the best object-sensitive analysis with the same context depth).},
booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {17–30},
numpages = {14},
keywords = {type-sensitivity, object-sensitivity, context-sensitivity, points-to analysis},
location = {Austin, Texas, USA},
series = {POPL '11}
}
                  
@article{Madsen:2020,
author = {Madsen, Magnus and Lhot\'{a}k, Ond\v{r}ej},
title = {Fixpoints for the Masses: Programming with First-Class Datalog Constraints},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428193},
doi = {10.1145/3428193},
journal = {Proc. ACM Program. Lang.},
month = {nov},
articleno = {125},
numpages = {28},
keywords = {logic programming, functional programming, first-class datalog}
}
@article{Torlak:2014,
author = {Torlak, Emina and Bodik, Rastislav},
title = {A Lightweight Symbolic Virtual Machine for Solver-Aided Host Languages},
year = {2014},
issue_date = {June 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {49},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2666356.2594340},
doi = {10.1145/2666356.2594340},
abstract = {Solver-aided domain-specific languages (SDSLs) are an emerging class of computer-aided programming systems. They ease the construction of programs by using satisfiability solvers to automate tasks such as verification, debugging, synthesis, and non-deterministic execution. But reducing programming tasks to satisfiability problems involves translating programs to logical constraints, which is an engineering challenge even for domain-specific languages.We have previously shown that translation to constraints can be avoided if SDSLs are implemented by (traditional) embedding into a host language that is itself solver-aided. This paper describes how to implement a symbolic virtual machine (SVM) for such a host language. Our symbolic virtual machine is lightweight because it compiles to constraints only a small subset of the host's constructs, while allowing SDSL designers to use the entire language, including constructs for DSL embedding. This lightweight compilation employs a novel symbolic execution technique with two key properties: it produces compact encodings, and it enables concrete evaluation to strip away host constructs that are outside the subset compilable to constraints. Our symbolic virtual machine architecture is at the heart of Rosette, a solver-aided language that is host to several new SDSLs.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {530–541},
numpages = {12},
keywords = {solver-aided languages, symbolic virtual machine}
}
@book{gordon1979edinburgh,
  title={Edinburgh LCF: A Mechanized Logic of Computation},
  author={Gordon, M. and Milner, R. and Wadsworth, C.P.},
  isbn={9783540097242},
  lccn={79024745},
  series={Lecture Notes in Computer Science},
  url={https://books.google.com/books?id=XVeWvQEACAAJ},
  year={1979},
  publisher={Springer Berlin Heidelberg}
}
@article{Willsey:2021,
author = {Willsey, Max and Nandi, Chandrakana and Wang, Yisu Remy and Flatt, Oliver and Tatlock, Zachary and Panchekha, Pavel},
title = {Egg: Fast and Extensible Equality Saturation},
year = {2021},
issue_date = {January 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {POPL},
url = {https://doi.org/10.1145/3434304},
doi = {10.1145/3434304},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {23},
numpages = {29},
keywords = {equality saturation, e-graphs}
}
                  
@article{10.1145/1594834.1480915,
author = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
title = {Equality Saturation: A New Approach to Optimization},
year = {2009},
issue_date = {January 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {44},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/1594834.1480915},
doi = {10.1145/1594834.1480915},
abstract = {Optimizations in a traditional compiler are applied sequentially, with each optimization destructively modifying the program to produce a transformed program that is then passed to the next optimization. We present a new approach for structuring the optimization phase of a compiler. In our approach, optimizations take the form of equality analyses that add equality information to a common intermediate representation. The optimizer works by repeatedly applying these analyses to infer equivalences between program fragments, thus saturating the intermediate representation with equalities. Once saturated, the intermediate representation encodes multiple optimized versions of the input program. At this point, a profitability heuristic picks the final optimized program from the various programs represented in the saturated representation. Our proposed way of structuring optimizers has a variety of benefits over previous approaches: our approach obviates the need to worry about optimization ordering, enables the use of a global optimization heuristic that selects among fully optimized programs, and can be used to perform translation validation, even on compilers other than our own. We present our approach, formalize it, and describe our choice of intermediate representation. We also present experimental results showing that our approach is practical in terms of time and space overhead, is effective at discovering intricate optimization opportunities, and is effective at performing translation validation for a realistic optimizer.},
journal = {SIGPLAN Not.},
month = {jan},
pages = {264–276},
numpages = {13},
keywords = {intermediate representation, equality reasoning, compiler optimization}
}


@inproceedings{Tate:2009,
author = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
title = {Equality Saturation: A New Approach to Optimization},
year = {2009},
isbn = {9781605583792},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1480881.1480915},
doi = {10.1145/1480881.1480915},
booktitle = {Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {264–276},
numpages = {13},
keywords = {equality reasoning, intermediate representation, compiler optimization},
location = {Savannah, GA, USA},
series = {POPL '09}
}
@InProceedings{smtz3,
author="de Moura, Leonardo
and Bj{\o}rner, Nikolaj",
editor="Pfenning, Frank",
title="Efficient E-Matching for SMT Solvers",
booktitle="Automated Deduction -- CADE-21",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="183--198",
isbn="978-3-540-73595-3"
}

@article{mtac, title={Mtac: A monad for typed tactic programming in Coq}, volume={25}, DOI={10.1017/S0956796815000118}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={ZILIANI, BETA and DREYER, DEREK and KRISHNASWAMI, NEELAKANTAN R. and NANEVSKI, ALEKSANDAR and VAFEIADIS, VIKTOR}, year={2015}, pages={e12}}
@inproceedings{Jiacheng:2022,
author = {Wu, Jiacheng and Wang, Jin and Zaniolo, Carlo},
title = {Optimizing Parallel Recursive Datalog Evaluation on Multicore Machines},
year = {2022},
isbn = {9781450392495},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3514221.3517853},
doi = {10.1145/3514221.3517853},
abstract = {Over the past years, there has been a resurgence of interest in Datalog due to its superior ability of expressing applications that require recursive computations. However, in addition to expressive power, supporting analytical tasks with ever-increasing volume of data requires high performance and scalability. In this paper, we present DCDatalog, an in-memory Datalog engine specifically designed for modern shared-memory multicore architectures. Our key contribution is a novel system architecture that supports a wide scope of Datalog applications with a light-weight coordination scheme during parallel evaluation. To this end, we propose a dynamic scheduling strategy that can generate the parallel execution plan on-the-fly while reducing concurrent accesses to the shared memory. Experimental results on several large datasets show that our system significantly outperforms existing parallel Datalog engines and also scales well with increasing amount of data.},
booktitle = {Proceedings of the 2022 International Conference on Management of Data},
pages = {1433–1446},
numpages = {14},
keywords = {efficiency, datalog, query processing, multicore machine},
location = {Philadelphia, PA, USA},
series = {SIGMOD '22}
}
@article{ROSU2010397,
title = {An overview of the K semantic framework},
journal = {The Journal of Logic and Algebraic Programming},
volume = {79},
number = {6},
pages = {397-434},
year = {2010},
note = {Membrane computing and programming},
issn = {1567-8326},
doi = {https://doi.org/10.1016/j.jlap.2010.03.012},
url = {https://www.sciencedirect.com/science/article/pii/S1567832610000160},
author = {Grigore Roșu and Traian Florin Șerbănută},
abstract = {K is an executable semantic framework in which programming languages, calculi, as well as type systems or formal analysis tools can be defined, making use of configurations, computations and rules. Configurations organize the system/program state in units called cells, which are labeled and can be nested. Computations carry “computational meaning” as special nested list structures sequentializing computational tasks, such as fragments of program; in particular, computations extend the original language or calculus syntax. K (rewrite) rules generalize conventional rewrite rules by making explicit which parts of the term they read, write, or do not care about. This distinction makes K a suitable framework for defining truly concurrent languages or calculi, even in the presence of sharing. Since computations can be handled like any other terms in a rewriting environment, that is, they can be matched, moved from one place to another in the original term, modified, or even deleted, K is particularly suitable for defining control-intensive language features such as abrupt termination, exceptions, or call/cc. This paper gives an overview of the K framework: what it is, how it can be used, and where it has been used so far. It also proposes and discusses the K definition of Challenge, a programming language that aims to challenge and expose the limitations of existing semantic frameworks.}
}
@book{Matthias:2009,
author = {Felleisen, Matthias and Findler, Robert Bruce and Flatt, Matthew},
title = {Semantics Engineering with PLT Redex},
year = {2009},
isbn = {0262062755},
publisher = {The MIT Press},
edition = {1st},
abstract = {This text is the first comprehensive presentation of reduction semantics in one volume; it also introduces the first reliable and easy-to-use tool set for such forms of semantics. Software engineers have long known that automatic tool support is critical for rapid prototyping and modeling, and this book is addressed to the working semantics engineer (graduate student or professional language designer). The book comes with a prototyping tool suite to develop, explore, test, debug, and publish semantic models of programming languages. With PLT Redex, semanticists can formulate models as grammars and reduction models on their computers with the ease of paper and pencil. The text first presents a framework for the formulation of language models, focusing on equational calculi and abstract machines, then introduces PLT Redex, a suite of software tools for expressing these models as PLT Redex models. Finally, experts describe a range of models formulated in Redex. PLT Redex comes with the PLT Scheme implementation, available free at http://www.plt-scheme.org/. Readers can download the software and experiment with Redex as they work their way through the book. For more information (including the preface, a sample syllabus, and a quick introduction to Redex), see the Redex website at http://redex.plt-scheme.org/. Matthias Felleisen, Robert Bruce Findler, and Matthew Flatt are the authors (with Shiram Krishnamurthi) of How to Design Programs: An Introduction to Programming and Computing, also published by the MIT Press.}
}
@inproceedings{Fedyukovich:2018,
  author    = {Grigory Fedyukovich and
               Sumanth Prabhu and
               Kumar Madhukar and
               Aarti Gupta},
  editor    = {Nikolaj S. Bj{\o}rner and
               Arie Gurfinkel},
  title     = {Solving Constrained Horn Clauses Using Syntax and Data},
  booktitle = {2018 Formal Methods in Computer Aided Design, {FMCAD} 2018, Austin,
               TX, USA, October 30 - November 2, 2018},
  pages     = {1--9},
  publisher = {{IEEE}},
  year      = {2018},
  url       = {https://doi.org/10.23919/FMCAD.2018.8603011},
  doi       = {10.23919/FMCAD.2018.8603011},
  timestamp = {Thu, 14 Apr 2022 20:26:15 +0200},
  biburl    = {https://dblp.org/rec/conf/fmcad/FedyukovichPMG18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@Inbook{Blass1987,
author="Blass, Andreas and Gurevich, Yuri",
title="Existential fixed-point logic",
bookTitle="Computation Theory and Logic",
year="1987",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="20--36",
isbn="978-3-540-47795-2",
doi="10.1007/3-540-18170-9_151",
url="https://doi.org/10.1007/3-540-18170-9_151"
}

@InProceedings{Arie:2022,
author="Gurfinkel, Arie",
editor="Shoham, Sharon
and Vizel, Yakir",
title="Program Verification with Constrained Horn Clauses (Invited Paper)",
booktitle="Computer Aided Verification",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="19--29",
isbn="978-3-031-13185-1"
}

@inbook{Bjorner:2015,
author = {Bj{\o}rner, Nikolaj and Gurfinkel, Arie and McMillan, Ken and Rybalchenko, Andrey},
volume={Fields of Logic and Computation II (pp.24-51)},
publisher={Springer LNCS},
year = {2015},
month = {09},
pages = {24-51},
title = {Horn Clause Solvers for Program Verification},
isbn = {978-3-319-23533-2},
doi = {10.1007/978-3-319-23534-9_2}
}
@article{Martin-Lof1996,
	number = {1},
	publisher = {Scandinavian University Press},
	year = {1996},
	title = {On the Meanings of the Logical Constants and the Justifications of the Logical Laws},
	pages = {11--60},
	author = {Per Martin{-}L\"{o}f},
	volume = {1},
	journal = {Nordic Journal of Philosophical Logic}
}